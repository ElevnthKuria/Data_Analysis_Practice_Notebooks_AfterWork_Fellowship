{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Copy of AfterWork_Essentials_Notebook_Data_Analysis_and_Reporting_with_Python","provenance":[{"file_id":"1FxgDiAyKhv9buIqr7L0C6KHSo_icqYx4","timestamp":1619624360506},{"file_id":"1WrhAUVj4HD2YRTIkp9VGoohIOkLMrB6s","timestamp":1619624163889}],"collapsed_sections":["p5-vSSK2YRvv","K7XZ0lfDZSfE","YC9AVuitZFD8","UxbUs5stZiZs","1mUNWEtSZsi9","MojDFr9UZH05","iPIq_mwkZjUS","sWGVGLXeZtLH","6XZbcORGZLd0","xldYtGZ-Zjz5","q9c7In767vRZ"]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"AEqsCbeuYNMH"},"source":["<font color=\"blue\">To use this notebook on Colaboratory, you will need to make a copy of it. Go to File > Save a Copy in Drive. You can then use the new copy that will appear in the new tab.</font>\n"]},{"cell_type":"markdown","metadata":{"id":"AzLPOliHYP0V"},"source":["# Essentials Notebook: Data Analysis and Reporting with Python"]},{"cell_type":"markdown","metadata":{"id":"p5-vSSK2YRvv"},"source":["## Pre-requisites"]},{"cell_type":"code","metadata":{"id":"7KgwSnDfYDoq"},"source":["# Pre-requisite 1\n","# ---\n","# Importing pandas library for data manipulation\n","# ---\n","# OUR CODE GOES BELOW\n","# \n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qUUHs9KPYUh_"},"source":["# Pre-requisite 2\n","# ---\n","# Importing numpy library for scientific computations\n","# ---\n","# OUR CODE GOES BELOW\n","# \n","import pandas as pd\n","import numpy as np"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"AKFUFX9oYYlz"},"source":["## 1. Data Exploration"]},{"cell_type":"markdown","metadata":{"id":"8qPMH6tKZQCL"},"source":["### Examples"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"mO6NfKbVYrCd","executionInfo":{"elapsed":1881,"status":"ok","timestamp":1619965309656,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"b65b44df-f199-4006-ffc0-2e73d9e0f929"},"source":["# Viewing top records of the dataset\n","# ---\n","# You have been given the following dataset on Ebola cases.\n","# Let's preview the first 10 rows.\n","# ---\n","# Dataset url = https://bit.ly/2T60DKG\n","# \n","\n","ebola_df = pd.read_csv('https://bit.ly/2T60DKG')\n","ebola_df.head(10)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country</th>\n","      <th>Month</th>\n","      <th>Year</th>\n","      <th>Lat</th>\n","      <th>Lon</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Guinea</td>\n","      <td>3</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>122.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Guinea</td>\n","      <td>4</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>224.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Guinea</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>291.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Guinea</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>413.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Guinea</td>\n","      <td>7</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>460.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Guinea</td>\n","      <td>8</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>771.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Guinea</td>\n","      <td>9</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>1022.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Guinea</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Guinea</td>\n","      <td>11</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Guinea</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Country  Month  Year   Lat  Lon   Value\n","0  Guinea      3    14  9.95 -9.7   122.0\n","1  Guinea      4    14  9.95 -9.7   224.0\n","2  Guinea      5    14  9.95 -9.7   291.0\n","3  Guinea      6    14  9.95 -9.7   413.0\n","4  Guinea      7    14  9.95 -9.7   460.0\n","5  Guinea      8    14  9.95 -9.7   771.0\n","6  Guinea      9    14  9.95 -9.7  1022.0\n","7  Guinea     10    14  9.95 -9.7     NaN\n","8  Guinea     11    14  9.95 -9.7     NaN\n","9  Guinea     12    14  9.95 -9.7     NaN"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"_-q9fhfTZRhK","executionInfo":{"elapsed":1078,"status":"ok","timestamp":1619965352259,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"b5017f95-92e4-43e9-cb44-34d7583f338a"},"source":["# Viewing last records of the dataset\n","# ---\n","# Preview the last 10 records of the ebola dataset\n","# ---\n","# \n","last_ebola_df = ebola_df.tail(10)\n","last_ebola_df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country</th>\n","      <th>Month</th>\n","      <th>Year</th>\n","      <th>Lat</th>\n","      <th>Lon</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>21</th>\n","      <td>Senegal</td>\n","      <td>8</td>\n","      <td>14</td>\n","      <td>14.50</td>\n","      <td>-14.45</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Senegal</td>\n","      <td>9</td>\n","      <td>14</td>\n","      <td>14.50</td>\n","      <td>-14.45</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Sierra Leone</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>8.46</td>\n","      <td>-11.78</td>\n","      <td>50.0</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Sierra Leone</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>8.46</td>\n","      <td>-11.78</td>\n","      <td>239.0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Sierra Leone</td>\n","      <td>7</td>\n","      <td>14</td>\n","      <td>8.46</td>\n","      <td>-11.78</td>\n","      <td>533.0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Sierra Leone</td>\n","      <td>8</td>\n","      <td>14</td>\n","      <td>8.46</td>\n","      <td>-11.78</td>\n","      <td>1216.0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Sierra Leone</td>\n","      <td>9</td>\n","      <td>14</td>\n","      <td>8.46</td>\n","      <td>-11.78</td>\n","      <td>1940.0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Sierra Leone</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>8.46</td>\n","      <td>-11.78</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Sierra Leone</td>\n","      <td>11</td>\n","      <td>14</td>\n","      <td>8.46</td>\n","      <td>-11.78</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Sierra Leone</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>8.46</td>\n","      <td>-11.78</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Country  Month  Year    Lat    Lon   Value\n","21       Senegal      8    14  14.50 -14.45     1.0\n","22       Senegal      9    14  14.50 -14.45     3.0\n","23  Sierra Leone      5    14   8.46 -11.78    50.0\n","24  Sierra Leone      6    14   8.46 -11.78   239.0\n","25  Sierra Leone      7    14   8.46 -11.78   533.0\n","26  Sierra Leone      8    14   8.46 -11.78  1216.0\n","27  Sierra Leone      9    14   8.46 -11.78  1940.0\n","28  Sierra Leone     10    14   8.46 -11.78     NaN\n","29  Sierra Leone     11    14   8.46 -11.78     NaN\n","30  Sierra Leone     12    14   8.46 -11.78     NaN"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"sJVRps4pZRXm","executionInfo":{"elapsed":1100,"status":"ok","timestamp":1619965359024,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"9434857e-1b45-46dc-8e04-8f7304f54c3f"},"source":["# Taking a sample\n","# ---\n","# Take a sample of the 5 records from the ebola dataset\n","# ---\n","# \n","sample_ebola_df = ebola_df.sample(5)\n","sample_ebola_df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country</th>\n","      <th>Month</th>\n","      <th>Year</th>\n","      <th>Lat</th>\n","      <th>Lon</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>22</th>\n","      <td>Senegal</td>\n","      <td>9</td>\n","      <td>14</td>\n","      <td>14.50</td>\n","      <td>-14.45</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Liberia</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Liberia</td>\n","      <td>11</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Liberia</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Liberia</td>\n","      <td>9</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>3362.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Country  Month  Year    Lat    Lon   Value\n","22  Senegal      9    14  14.50 -14.45     3.0\n","18  Liberia     12    14   6.43  -9.43     NaN\n","17  Liberia     11    14   6.43  -9.43     NaN\n","16  Liberia     10    14   6.43  -9.43     NaN\n","15  Liberia      9    14   6.43  -9.43  3362.0"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"K7XZ0lfDZSfE"},"source":["### <font color=\"green\">Challenges</font>"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":669},"id":"DnYZqcjdZZgg","executionInfo":{"elapsed":1309,"status":"ok","timestamp":1619965486203,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"cee7bb96-24e4-41a0-82fc-e444c5d64102"},"source":["# Challenge 1\n","# ---\n","# View the first 20 records of the given banknotes dataset \n","# ---\n","# Dataset url = https://bit.ly/2yT9oAU\n","# ---\n","# OUR CODE GOES BELOW\n","# \n","\n","bn_df = pd.read_csv('banknotes.csv')\n","\n","bn_df.head(20)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>conterfeit</th>\n","      <th>Length</th>\n","      <th>Left</th>\n","      <th>Right</th>\n","      <th>Bottom</th>\n","      <th>Top</th>\n","      <th>Diagonal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>214.8</td>\n","      <td>131.0</td>\n","      <td>131.1</td>\n","      <td>9.0</td>\n","      <td>9.7</td>\n","      <td>141.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>214.6</td>\n","      <td>129.7</td>\n","      <td>129.7</td>\n","      <td>8.1</td>\n","      <td>9.5</td>\n","      <td>141.7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>214.8</td>\n","      <td>129.7</td>\n","      <td>129.7</td>\n","      <td>8.7</td>\n","      <td>9.6</td>\n","      <td>142.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>214.8</td>\n","      <td>129.7</td>\n","      <td>129.6</td>\n","      <td>7.5</td>\n","      <td>10.4</td>\n","      <td>142.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>215.0</td>\n","      <td>129.6</td>\n","      <td>129.7</td>\n","      <td>10.4</td>\n","      <td>7.7</td>\n","      <td>141.8</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>215.7</td>\n","      <td>130.8</td>\n","      <td>130.5</td>\n","      <td>9.0</td>\n","      <td>10.1</td>\n","      <td>141.4</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>215.5</td>\n","      <td>129.5</td>\n","      <td>129.7</td>\n","      <td>7.9</td>\n","      <td>9.6</td>\n","      <td>141.6</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>214.5</td>\n","      <td>129.6</td>\n","      <td>129.2</td>\n","      <td>7.2</td>\n","      <td>10.7</td>\n","      <td>141.7</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0</td>\n","      <td>214.9</td>\n","      <td>129.4</td>\n","      <td>129.7</td>\n","      <td>8.2</td>\n","      <td>11.0</td>\n","      <td>141.9</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0</td>\n","      <td>215.2</td>\n","      <td>130.4</td>\n","      <td>130.3</td>\n","      <td>9.2</td>\n","      <td>10.0</td>\n","      <td>140.7</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0</td>\n","      <td>215.3</td>\n","      <td>130.4</td>\n","      <td>130.3</td>\n","      <td>7.9</td>\n","      <td>11.7</td>\n","      <td>141.8</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0</td>\n","      <td>215.1</td>\n","      <td>129.5</td>\n","      <td>129.6</td>\n","      <td>7.7</td>\n","      <td>10.5</td>\n","      <td>142.2</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0</td>\n","      <td>215.2</td>\n","      <td>130.8</td>\n","      <td>129.6</td>\n","      <td>7.9</td>\n","      <td>10.8</td>\n","      <td>141.4</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0</td>\n","      <td>214.7</td>\n","      <td>129.7</td>\n","      <td>129.7</td>\n","      <td>7.7</td>\n","      <td>10.9</td>\n","      <td>141.7</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0</td>\n","      <td>215.1</td>\n","      <td>129.9</td>\n","      <td>129.7</td>\n","      <td>7.7</td>\n","      <td>10.8</td>\n","      <td>141.8</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0</td>\n","      <td>214.5</td>\n","      <td>129.8</td>\n","      <td>129.8</td>\n","      <td>9.3</td>\n","      <td>8.5</td>\n","      <td>141.6</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0</td>\n","      <td>214.6</td>\n","      <td>129.9</td>\n","      <td>130.1</td>\n","      <td>8.2</td>\n","      <td>9.8</td>\n","      <td>141.7</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0</td>\n","      <td>215.0</td>\n","      <td>129.9</td>\n","      <td>129.7</td>\n","      <td>9.0</td>\n","      <td>9.0</td>\n","      <td>141.9</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0</td>\n","      <td>215.2</td>\n","      <td>129.6</td>\n","      <td>129.6</td>\n","      <td>7.4</td>\n","      <td>11.5</td>\n","      <td>141.5</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0</td>\n","      <td>214.7</td>\n","      <td>130.2</td>\n","      <td>129.9</td>\n","      <td>8.6</td>\n","      <td>10.0</td>\n","      <td>141.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    conterfeit  Length   Left  Right  Bottom   Top  Diagonal\n","0            0   214.8  131.0  131.1     9.0   9.7     141.0\n","1            0   214.6  129.7  129.7     8.1   9.5     141.7\n","2            0   214.8  129.7  129.7     8.7   9.6     142.2\n","3            0   214.8  129.7  129.6     7.5  10.4     142.0\n","4            0   215.0  129.6  129.7    10.4   7.7     141.8\n","5            0   215.7  130.8  130.5     9.0  10.1     141.4\n","6            0   215.5  129.5  129.7     7.9   9.6     141.6\n","7            0   214.5  129.6  129.2     7.2  10.7     141.7\n","8            0   214.9  129.4  129.7     8.2  11.0     141.9\n","9            0   215.2  130.4  130.3     9.2  10.0     140.7\n","10           0   215.3  130.4  130.3     7.9  11.7     141.8\n","11           0   215.1  129.5  129.6     7.7  10.5     142.2\n","12           0   215.2  130.8  129.6     7.9  10.8     141.4\n","13           0   214.7  129.7  129.7     7.7  10.9     141.7\n","14           0   215.1  129.9  129.7     7.7  10.8     141.8\n","15           0   214.5  129.8  129.8     9.3   8.5     141.6\n","16           0   214.6  129.9  130.1     8.2   9.8     141.7\n","17           0   215.0  129.9  129.7     9.0   9.0     141.9\n","18           0   215.2  129.6  129.6     7.4  11.5     141.5\n","19           0   214.7  130.2  129.9     8.6  10.0     141.9"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"nw1IjmUZZaA2","executionInfo":{"elapsed":1272,"status":"ok","timestamp":1619965561257,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"462221c6-8fe6-4070-943b-d873819f71da"},"source":["# Challenge 2\n","# ---\n","# View the last 5 records of the above banknotes dataset \n","# ---\n","# OUR CODE GOES BELOW\n","# \n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>conterfeit</th>\n","      <th>Length</th>\n","      <th>Left</th>\n","      <th>Right</th>\n","      <th>Bottom</th>\n","      <th>Top</th>\n","      <th>Diagonal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>195</th>\n","      <td>1</td>\n","      <td>215.0</td>\n","      <td>130.4</td>\n","      <td>130.3</td>\n","      <td>9.9</td>\n","      <td>12.1</td>\n","      <td>139.6</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>1</td>\n","      <td>215.1</td>\n","      <td>130.3</td>\n","      <td>129.9</td>\n","      <td>10.3</td>\n","      <td>11.5</td>\n","      <td>139.7</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>1</td>\n","      <td>214.8</td>\n","      <td>130.3</td>\n","      <td>130.4</td>\n","      <td>10.6</td>\n","      <td>11.1</td>\n","      <td>140.0</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>1</td>\n","      <td>214.7</td>\n","      <td>130.7</td>\n","      <td>130.8</td>\n","      <td>11.2</td>\n","      <td>11.2</td>\n","      <td>139.4</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>1</td>\n","      <td>214.3</td>\n","      <td>129.9</td>\n","      <td>129.9</td>\n","      <td>10.2</td>\n","      <td>11.5</td>\n","      <td>139.6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     conterfeit  Length   Left  Right  Bottom   Top  Diagonal\n","195           1   215.0  130.4  130.3     9.9  12.1     139.6\n","196           1   215.1  130.3  129.9    10.3  11.5     139.7\n","197           1   214.8  130.3  130.4    10.6  11.1     140.0\n","198           1   214.7  130.7  130.8    11.2  11.2     139.4\n","199           1   214.3  129.9  129.9    10.2  11.5     139.6"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"aFgg61OxZZvT","executionInfo":{"elapsed":1051,"status":"ok","timestamp":1619965585921,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"ec8909b6-f43f-491c-c9e4-579bda77bea8"},"source":["# Challenge 3\n","# ---\n","# Get a sample of 50 records from the above banknotes dataset \n","# ---\n","# OUR CODE GOES BELOW\n","# \n","import pandas as pd\n","import numpy as np\n","bn_df = pd.read_csv('banknotes.csv')\n","\n","bn_df.sample(50)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>conterfeit</th>\n","      <th>Length</th>\n","      <th>Left</th>\n","      <th>Right</th>\n","      <th>Bottom</th>\n","      <th>Top</th>\n","      <th>Diagonal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>86</th>\n","      <td>0</td>\n","      <td>215.2</td>\n","      <td>129.9</td>\n","      <td>129.7</td>\n","      <td>8.7</td>\n","      <td>9.5</td>\n","      <td>141.6</td>\n","    </tr>\n","    <tr>\n","      <th>106</th>\n","      <td>1</td>\n","      <td>215.3</td>\n","      <td>130.3</td>\n","      <td>130.1</td>\n","      <td>9.3</td>\n","      <td>12.1</td>\n","      <td>140.2</td>\n","    </tr>\n","    <tr>\n","      <th>169</th>\n","      <td>1</td>\n","      <td>214.9</td>\n","      <td>130.0</td>\n","      <td>129.9</td>\n","      <td>11.4</td>\n","      <td>10.9</td>\n","      <td>139.7</td>\n","    </tr>\n","    <tr>\n","      <th>129</th>\n","      <td>1</td>\n","      <td>214.5</td>\n","      <td>130.2</td>\n","      <td>130.6</td>\n","      <td>9.8</td>\n","      <td>12.1</td>\n","      <td>139.9</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>0</td>\n","      <td>215.0</td>\n","      <td>129.6</td>\n","      <td>130.2</td>\n","      <td>8.7</td>\n","      <td>10.0</td>\n","      <td>141.2</td>\n","    </tr>\n","    <tr>\n","      <th>151</th>\n","      <td>1</td>\n","      <td>214.6</td>\n","      <td>129.9</td>\n","      <td>129.7</td>\n","      <td>11.9</td>\n","      <td>10.1</td>\n","      <td>139.0</td>\n","    </tr>\n","    <tr>\n","      <th>121</th>\n","      <td>1</td>\n","      <td>215.1</td>\n","      <td>130.6</td>\n","      <td>130.3</td>\n","      <td>12.3</td>\n","      <td>10.2</td>\n","      <td>139.6</td>\n","    </tr>\n","    <tr>\n","      <th>138</th>\n","      <td>1</td>\n","      <td>214.6</td>\n","      <td>130.4</td>\n","      <td>130.4</td>\n","      <td>11.3</td>\n","      <td>10.8</td>\n","      <td>139.8</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0</td>\n","      <td>215.0</td>\n","      <td>129.9</td>\n","      <td>129.7</td>\n","      <td>9.0</td>\n","      <td>9.0</td>\n","      <td>141.9</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>1</td>\n","      <td>214.3</td>\n","      <td>130.1</td>\n","      <td>130.1</td>\n","      <td>11.6</td>\n","      <td>10.5</td>\n","      <td>139.7</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>0</td>\n","      <td>215.0</td>\n","      <td>129.6</td>\n","      <td>129.4</td>\n","      <td>8.8</td>\n","      <td>9.0</td>\n","      <td>141.1</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>1</td>\n","      <td>216.3</td>\n","      <td>130.7</td>\n","      <td>130.4</td>\n","      <td>10.0</td>\n","      <td>10.1</td>\n","      <td>138.8</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>1</td>\n","      <td>215.0</td>\n","      <td>130.5</td>\n","      <td>130.4</td>\n","      <td>10.6</td>\n","      <td>11.1</td>\n","      <td>139.9</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>1</td>\n","      <td>214.9</td>\n","      <td>130.3</td>\n","      <td>130.1</td>\n","      <td>8.7</td>\n","      <td>11.7</td>\n","      <td>140.2</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0</td>\n","      <td>214.5</td>\n","      <td>129.8</td>\n","      <td>129.8</td>\n","      <td>9.3</td>\n","      <td>8.5</td>\n","      <td>141.6</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>0</td>\n","      <td>215.0</td>\n","      <td>130.0</td>\n","      <td>129.6</td>\n","      <td>7.7</td>\n","      <td>10.5</td>\n","      <td>140.7</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>0</td>\n","      <td>215.2</td>\n","      <td>130.1</td>\n","      <td>129.9</td>\n","      <td>7.9</td>\n","      <td>10.8</td>\n","      <td>141.3</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>0</td>\n","      <td>214.8</td>\n","      <td>129.7</td>\n","      <td>129.3</td>\n","      <td>8.3</td>\n","      <td>9.0</td>\n","      <td>142.0</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>1</td>\n","      <td>214.8</td>\n","      <td>130.3</td>\n","      <td>130.4</td>\n","      <td>10.6</td>\n","      <td>11.1</td>\n","      <td>140.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0</td>\n","      <td>214.9</td>\n","      <td>129.4</td>\n","      <td>129.7</td>\n","      <td>8.2</td>\n","      <td>11.0</td>\n","      <td>141.9</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>1</td>\n","      <td>215.1</td>\n","      <td>130.2</td>\n","      <td>130.2</td>\n","      <td>10.1</td>\n","      <td>11.3</td>\n","      <td>140.3</td>\n","    </tr>\n","    <tr>\n","      <th>125</th>\n","      <td>1</td>\n","      <td>214.9</td>\n","      <td>130.0</td>\n","      <td>130.3</td>\n","      <td>10.2</td>\n","      <td>11.4</td>\n","      <td>139.6</td>\n","    </tr>\n","    <tr>\n","      <th>161</th>\n","      <td>1</td>\n","      <td>214.9</td>\n","      <td>130.5</td>\n","      <td>130.1</td>\n","      <td>9.9</td>\n","      <td>10.2</td>\n","      <td>138.1</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>0</td>\n","      <td>214.8</td>\n","      <td>129.9</td>\n","      <td>129.7</td>\n","      <td>7.3</td>\n","      <td>10.9</td>\n","      <td>142.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0</td>\n","      <td>215.3</td>\n","      <td>130.4</td>\n","      <td>130.3</td>\n","      <td>7.9</td>\n","      <td>11.7</td>\n","      <td>141.8</td>\n","    </tr>\n","    <tr>\n","      <th>116</th>\n","      <td>1</td>\n","      <td>214.7</td>\n","      <td>130.6</td>\n","      <td>130.1</td>\n","      <td>11.8</td>\n","      <td>10.5</td>\n","      <td>139.8</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>0</td>\n","      <td>214.6</td>\n","      <td>130.2</td>\n","      <td>130.2</td>\n","      <td>9.4</td>\n","      <td>9.7</td>\n","      <td>141.8</td>\n","    </tr>\n","    <tr>\n","      <th>112</th>\n","      <td>1</td>\n","      <td>215.4</td>\n","      <td>130.7</td>\n","      <td>131.1</td>\n","      <td>9.7</td>\n","      <td>11.8</td>\n","      <td>140.6</td>\n","    </tr>\n","    <tr>\n","      <th>59</th>\n","      <td>0</td>\n","      <td>215.1</td>\n","      <td>130.0</td>\n","      <td>129.8</td>\n","      <td>8.2</td>\n","      <td>10.3</td>\n","      <td>141.4</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>0</td>\n","      <td>215.0</td>\n","      <td>129.9</td>\n","      <td>129.7</td>\n","      <td>8.0</td>\n","      <td>10.5</td>\n","      <td>142.0</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>0</td>\n","      <td>215.1</td>\n","      <td>129.6</td>\n","      <td>129.8</td>\n","      <td>8.6</td>\n","      <td>9.8</td>\n","      <td>141.8</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>0</td>\n","      <td>215.1</td>\n","      <td>129.9</td>\n","      <td>129.6</td>\n","      <td>8.9</td>\n","      <td>10.2</td>\n","      <td>141.5</td>\n","    </tr>\n","    <tr>\n","      <th>78</th>\n","      <td>0</td>\n","      <td>215.2</td>\n","      <td>130.5</td>\n","      <td>129.8</td>\n","      <td>7.9</td>\n","      <td>10.9</td>\n","      <td>140.9</td>\n","    </tr>\n","    <tr>\n","      <th>153</th>\n","      <td>1</td>\n","      <td>214.5</td>\n","      <td>130.1</td>\n","      <td>130.1</td>\n","      <td>12.1</td>\n","      <td>10.3</td>\n","      <td>139.4</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>1</td>\n","      <td>214.7</td>\n","      <td>130.2</td>\n","      <td>130.1</td>\n","      <td>10.7</td>\n","      <td>11.0</td>\n","      <td>139.4</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>215.5</td>\n","      <td>129.5</td>\n","      <td>129.7</td>\n","      <td>7.9</td>\n","      <td>9.6</td>\n","      <td>141.6</td>\n","    </tr>\n","    <tr>\n","      <th>111</th>\n","      <td>1</td>\n","      <td>215.1</td>\n","      <td>130.5</td>\n","      <td>130.3</td>\n","      <td>10.6</td>\n","      <td>11.5</td>\n","      <td>140.1</td>\n","    </tr>\n","    <tr>\n","      <th>180</th>\n","      <td>1</td>\n","      <td>215.0</td>\n","      <td>130.4</td>\n","      <td>130.1</td>\n","      <td>11.4</td>\n","      <td>10.7</td>\n","      <td>139.1</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>1</td>\n","      <td>214.8</td>\n","      <td>130.5</td>\n","      <td>130.3</td>\n","      <td>10.2</td>\n","      <td>12.1</td>\n","      <td>139.1</td>\n","    </tr>\n","    <tr>\n","      <th>101</th>\n","      <td>1</td>\n","      <td>214.9</td>\n","      <td>130.5</td>\n","      <td>130.2</td>\n","      <td>11.0</td>\n","      <td>11.5</td>\n","      <td>139.5</td>\n","    </tr>\n","    <tr>\n","      <th>107</th>\n","      <td>1</td>\n","      <td>214.8</td>\n","      <td>130.1</td>\n","      <td>130.4</td>\n","      <td>9.8</td>\n","      <td>11.5</td>\n","      <td>139.9</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>0</td>\n","      <td>215.3</td>\n","      <td>129.9</td>\n","      <td>129.4</td>\n","      <td>7.9</td>\n","      <td>10.0</td>\n","      <td>142.0</td>\n","    </tr>\n","    <tr>\n","      <th>144</th>\n","      <td>1</td>\n","      <td>214.5</td>\n","      <td>129.8</td>\n","      <td>129.8</td>\n","      <td>11.4</td>\n","      <td>10.0</td>\n","      <td>139.3</td>\n","    </tr>\n","    <tr>\n","      <th>109</th>\n","      <td>1</td>\n","      <td>215.2</td>\n","      <td>130.6</td>\n","      <td>130.8</td>\n","      <td>10.4</td>\n","      <td>11.2</td>\n","      <td>140.3</td>\n","    </tr>\n","    <tr>\n","      <th>181</th>\n","      <td>1</td>\n","      <td>214.8</td>\n","      <td>130.6</td>\n","      <td>130.6</td>\n","      <td>8.0</td>\n","      <td>11.4</td>\n","      <td>138.7</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>0</td>\n","      <td>215.1</td>\n","      <td>129.6</td>\n","      <td>129.3</td>\n","      <td>8.3</td>\n","      <td>9.9</td>\n","      <td>141.6</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>0</td>\n","      <td>215.2</td>\n","      <td>129.9</td>\n","      <td>129.7</td>\n","      <td>7.2</td>\n","      <td>10.6</td>\n","      <td>142.1</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>0</td>\n","      <td>215.1</td>\n","      <td>130.1</td>\n","      <td>129.9</td>\n","      <td>7.9</td>\n","      <td>11.0</td>\n","      <td>141.3</td>\n","    </tr>\n","    <tr>\n","      <th>160</th>\n","      <td>1</td>\n","      <td>215.6</td>\n","      <td>130.1</td>\n","      <td>129.7</td>\n","      <td>7.4</td>\n","      <td>12.2</td>\n","      <td>138.4</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>0</td>\n","      <td>214.8</td>\n","      <td>129.7</td>\n","      <td>129.3</td>\n","      <td>9.1</td>\n","      <td>9.5</td>\n","      <td>141.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     conterfeit  Length   Left  Right  Bottom   Top  Diagonal\n","86            0   215.2  129.9  129.7     8.7   9.5     141.6\n","106           1   215.3  130.3  130.1     9.3  12.1     140.2\n","169           1   214.9  130.0  129.9    11.4  10.9     139.7\n","129           1   214.5  130.2  130.6     9.8  12.1     139.9\n","72            0   215.0  129.6  130.2     8.7  10.0     141.2\n","151           1   214.6  129.9  129.7    11.9  10.1     139.0\n","121           1   215.1  130.6  130.3    12.3  10.2     139.6\n","138           1   214.6  130.4  130.4    11.3  10.8     139.8\n","17            0   215.0  129.9  129.7     9.0   9.0     141.9\n","176           1   214.3  130.1  130.1    11.6  10.5     139.7\n","57            0   215.0  129.6  129.4     8.8   9.0     141.1\n","166           1   216.3  130.7  130.4    10.0  10.1     138.8\n","143           1   215.0  130.5  130.4    10.6  11.1     139.9\n","102           1   214.9  130.3  130.1     8.7  11.7     140.2\n","15            0   214.5  129.8  129.8     9.3   8.5     141.6\n","32            0   215.0  130.0  129.6     7.7  10.5     140.7\n","83            0   215.2  130.1  129.9     7.9  10.8     141.3\n","29            0   214.8  129.7  129.3     8.3   9.0     142.0\n","197           1   214.8  130.3  130.4    10.6  11.1     140.0\n","8             0   214.9  129.4  129.7     8.2  11.0     141.9\n","128           1   215.1  130.2  130.2    10.1  11.3     140.3\n","125           1   214.9  130.0  130.3    10.2  11.4     139.6\n","161           1   214.9  130.5  130.1     9.9  10.2     138.1\n","47            0   214.8  129.9  129.7     7.3  10.9     142.0\n","10            0   215.3  130.4  130.3     7.9  11.7     141.8\n","116           1   214.7  130.6  130.1    11.8  10.5     139.8\n","35            0   214.6  130.2  130.2     9.4   9.7     141.8\n","112           1   215.4  130.7  131.1     9.7  11.8     140.6\n","59            0   215.1  130.0  129.8     8.2  10.3     141.4\n","89            0   215.0  129.9  129.7     8.0  10.5     142.0\n","68            0   215.1  129.6  129.8     8.6   9.8     141.8\n","85            0   215.1  129.9  129.6     8.9  10.2     141.5\n","78            0   215.2  130.5  129.8     7.9  10.9     140.9\n","153           1   214.5  130.1  130.1    12.1  10.3     139.4\n","148           1   214.7  130.2  130.1    10.7  11.0     139.4\n","6             0   215.5  129.5  129.7     7.9   9.6     141.6\n","111           1   215.1  130.5  130.3    10.6  11.5     140.1\n","180           1   215.0  130.4  130.1    11.4  10.7     139.1\n","178           1   214.8  130.5  130.3    10.2  12.1     139.1\n","101           1   214.9  130.5  130.2    11.0  11.5     139.5\n","107           1   214.8  130.1  130.4     9.8  11.5     139.9\n","37            0   215.3  129.9  129.4     7.9  10.0     142.0\n","144           1   214.5  129.8  129.8    11.4  10.0     139.3\n","109           1   215.2  130.6  130.8    10.4  11.2     140.3\n","181           1   214.8  130.6  130.6     8.0  11.4     138.7\n","60            0   215.1  129.6  129.3     8.3   9.9     141.6\n","74            0   215.2  129.9  129.7     7.2  10.6     142.1\n","58            0   215.1  130.1  129.9     7.9  11.0     141.3\n","160           1   215.6  130.1  129.7     7.4  12.2     138.4\n","67            0   214.8  129.7  129.3     9.1   9.5     141.5"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"vjKU2wFjYseF"},"source":["## 2. Selecting Columns I"]},{"cell_type":"markdown","metadata":{"id":"mcBYkd2dZeRm"},"source":["### Examples"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"k-tJw2xQZeRo","executionInfo":{"elapsed":1057,"status":"ok","timestamp":1619968615790,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"5bbe85af-67d1-489d-8d73-6e07a962de99"},"source":["# Selecting a Column\n","# ---\n","# Select the first 5 values of the Value column from the previously used ebola dataset\n","# ---\n","# \n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>122.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>224.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>291.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>413.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>460.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Value\n","0  122.0\n","1  224.0\n","2  291.0\n","3  413.0\n","4  460.0"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"DDrUE3y8ZeRt","executionInfo":{"elapsed":875,"status":"ok","timestamp":1619969666073,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"a746a5de-d431-472d-a5ae-5a0a0fcb61dd"},"source":["# Selecting Multiple Columns I\n","# ---\n","# Select last 5 records from Country and Latitude column i.e. Lat, of the ebola dataset\n","# ---\n","#\n","#ebola_df_country_lat = ebola_df[['Country', 'Lat']]\n","#ebola_df_country_lat.tail()\n","\n","# Method 2\n","# Uncomment the following lines\n","# ---\n","ebola_df_country_lat_method2 = ebola_df.iloc[:,[0, 3]]\n","ebola_df_country_lat_method2.tail()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country</th>\n","      <th>Lat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>26</th>\n","      <td>Sierra Leone</td>\n","      <td>8.46</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Sierra Leone</td>\n","      <td>8.46</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Sierra Leone</td>\n","      <td>8.46</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Sierra Leone</td>\n","      <td>8.46</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Sierra Leone</td>\n","      <td>8.46</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Country   Lat\n","26  Sierra Leone  8.46\n","27  Sierra Leone  8.46\n","28  Sierra Leone  8.46\n","29  Sierra Leone  8.46\n","30  Sierra Leone  8.46"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"PAYdeC6trVEr","executionInfo":{"elapsed":966,"status":"ok","timestamp":1619970854041,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"7a6ea283-c0ac-4049-9776-396a5f3e58c7"},"source":["# Selecting Multiple Columns II\n","# ---\n","# Select last 5 records of the first 2 columns of the the ebola dataset\n","# ---\n","# \n","ebola_df_country_bonus = ebola_df.iloc[:,0:3]\n","ebola_df_country_bonus.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country</th>\n","      <th>Month</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Guinea</td>\n","      <td>3</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Guinea</td>\n","      <td>4</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Guinea</td>\n","      <td>5</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Guinea</td>\n","      <td>6</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Guinea</td>\n","      <td>7</td>\n","      <td>14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Country  Month  Year\n","0  Guinea      3    14\n","1  Guinea      4    14\n","2  Guinea      5    14\n","3  Guinea      6    14\n","4  Guinea      7    14"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"markdown","metadata":{"id":"amveijHvZqGL"},"source":["### <font color=\"green\">Challenges</font>"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":669},"id":"lsZ4g8bNZqGN","executionInfo":{"elapsed":2086,"status":"ok","timestamp":1619970575070,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"f3760249-dc2b-4a61-944b-72ad6aeee5ae"},"source":["# Challenge 1\n","# ---\n","# Select the first 20 records of the Diagonal column in the given banknotes dataset.\n","# ---\n","# Dataset url = https://bit.ly/2yT9oAU\n","# ---\n","# OUR CODE GOES BELOW\n","# \n","\n","\n","bn_df_value = bn_df[['Diagonal']]\n","bn_df_value.head(20)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Diagonal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>141.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>141.7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>142.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>142.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>141.8</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>141.4</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>141.6</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>141.7</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>141.9</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>140.7</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>141.8</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>142.2</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>141.4</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>141.7</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>141.8</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>141.6</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>141.7</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>141.9</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>141.5</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>141.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Diagonal\n","0      141.0\n","1      141.7\n","2      142.2\n","3      142.0\n","4      141.8\n","5      141.4\n","6      141.6\n","7      141.7\n","8      141.9\n","9      140.7\n","10     141.8\n","11     142.2\n","12     141.4\n","13     141.7\n","14     141.8\n","15     141.6\n","16     141.7\n","17     141.9\n","18     141.5\n","19     141.9"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"tEtn_FD8ZqGR","executionInfo":{"elapsed":1362,"status":"ok","timestamp":1619978083172,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"3e6a3d78-0da8-4554-ec4c-63ebd154682f"},"source":["# Challenge 2\n","# ---\n","# Select a sample of 10 records from the Diagonal and conterfeit column using the banknotes dataset.\n","# ---\n","# OUR CODE GOES BELOW\n","\n"," \n","bn_df_dia_cou = bn_df[[\"Diagonal\", \"conterfeit\"]]\n","bn_df_dia_cou.sample(10)\n","\n","#bn_df = pd.read_csv('https://bit.ly/2yT9oAU')\n","\n","#bn_df.head(10)\n","#bn_df_dia_cou = bn_df.iloc[:,[0, 7]]\n","#bn_df_dia_cou.tail()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Diagonal</th>\n","      <th>conterfeit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>127</th>\n","      <td>140.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>139.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>141.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>142.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>141.8</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>167</th>\n","      <td>138.6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>141.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>142.3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>139.8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>141.8</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     Diagonal  conterfeit\n","127     140.0           1\n","178     139.1           1\n","24      141.1           0\n","47      142.0           0\n","73      141.8           0\n","167     138.6           1\n","0       141.0           0\n","25      142.3           0\n","145     139.8           1\n","45      141.8           0"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"z_JIguQLZqGV","executionInfo":{"elapsed":2103,"status":"ok","timestamp":1619978499805,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"e79c82eb-3e45-4a31-e53d-e9c32c74c8f7"},"source":["# Challenge 3\n","# ---\n","# In prepartion for data modeling, you're required to select last 5 colums of the banknotes dataset.\n","# Once you do so, preview the dataframe to check whether you've selected the columns correctly.\n","# ---\n","# OUR CODE GOES BELOW\n","# \n","\n","import pandas as pd\n","import numpy as np\n","\n","bn_df = pd.read_csv('https://bit.ly/2yT9oAU')\n","\n","bn_df.iloc[:,-5:]\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Left</th>\n","      <th>Right</th>\n","      <th>Bottom</th>\n","      <th>Top</th>\n","      <th>Diagonal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>131.0</td>\n","      <td>131.1</td>\n","      <td>9.0</td>\n","      <td>9.7</td>\n","      <td>141.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>129.7</td>\n","      <td>129.7</td>\n","      <td>8.1</td>\n","      <td>9.5</td>\n","      <td>141.7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>129.7</td>\n","      <td>129.7</td>\n","      <td>8.7</td>\n","      <td>9.6</td>\n","      <td>142.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>129.7</td>\n","      <td>129.6</td>\n","      <td>7.5</td>\n","      <td>10.4</td>\n","      <td>142.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>129.6</td>\n","      <td>129.7</td>\n","      <td>10.4</td>\n","      <td>7.7</td>\n","      <td>141.8</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>130.4</td>\n","      <td>130.3</td>\n","      <td>9.9</td>\n","      <td>12.1</td>\n","      <td>139.6</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>130.3</td>\n","      <td>129.9</td>\n","      <td>10.3</td>\n","      <td>11.5</td>\n","      <td>139.7</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>130.3</td>\n","      <td>130.4</td>\n","      <td>10.6</td>\n","      <td>11.1</td>\n","      <td>140.0</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>130.7</td>\n","      <td>130.8</td>\n","      <td>11.2</td>\n","      <td>11.2</td>\n","      <td>139.4</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>129.9</td>\n","      <td>129.9</td>\n","      <td>10.2</td>\n","      <td>11.5</td>\n","      <td>139.6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 5 columns</p>\n","</div>"],"text/plain":["      Left  Right  Bottom   Top  Diagonal\n","0    131.0  131.1     9.0   9.7     141.0\n","1    129.7  129.7     8.1   9.5     141.7\n","2    129.7  129.7     8.7   9.6     142.2\n","3    129.7  129.6     7.5  10.4     142.0\n","4    129.6  129.7    10.4   7.7     141.8\n","..     ...    ...     ...   ...       ...\n","195  130.4  130.3     9.9  12.1     139.6\n","196  130.3  129.9    10.3  11.5     139.7\n","197  130.3  130.4    10.6  11.1     140.0\n","198  130.7  130.8    11.2  11.2     139.4\n","199  129.9  129.9    10.2  11.5     139.6\n","\n","[200 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"InG0BnDgYxUo"},"source":["## 3. Selecting Columns II "]},{"cell_type":"markdown","metadata":{"id":"JFmLS0JcZfyU"},"source":["### Examples"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1WgKBLL5ZfyV","executionInfo":{"elapsed":1990,"status":"ok","timestamp":1619978698578,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"f49af145-9751-4fb0-a482-d2336a405c3e"},"source":["# Selecting Unique Values in a column\n","# --- \n","# Let's select unique values from the Country column in the ebola dataset\n","# ---\n","# \n","import pandas as pd\n","import numpy as np\n","\n","ebola_df = pd.read_csv('https://bit.ly/2T60DKG')\n","ebola_countries = ebola_df['Country'].unique() \n","\n","# We use the list() method to get a list else\n","# we would get an array.\n","# ---\n","#\n","list(ebola_countries)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Guinea', 'Liberia', 'Mali', 'Senegal', 'Sierra Leone']"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":328},"id":"nHzN8EplZfyY","executionInfo":{"elapsed":1317,"status":"ok","timestamp":1619978708036,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"069d0098-e16d-4a10-912c-3e3ad83cb061"},"source":["# Selecting Rows with Columns with certain values\n","# ---\n","# We will select all Liberia records\n","# \n","liberia_records = ebola_df[ebola_df.Country.isin(['Liberia'])]\n","liberia_records"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country</th>\n","      <th>Month</th>\n","      <th>Year</th>\n","      <th>Lat</th>\n","      <th>Lon</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10</th>\n","      <td>Liberia</td>\n","      <td>4</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>35.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Liberia</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Liberia</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>107.0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Liberia</td>\n","      <td>7</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>329.0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Liberia</td>\n","      <td>8</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>1395.0</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Liberia</td>\n","      <td>9</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>3362.0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Liberia</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Liberia</td>\n","      <td>11</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Liberia</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Country  Month  Year   Lat   Lon   Value\n","10  Liberia      4    14  6.43 -9.43    35.0\n","11  Liberia      5    14  6.43 -9.43    13.0\n","12  Liberia      6    14  6.43 -9.43   107.0\n","13  Liberia      7    14  6.43 -9.43   329.0\n","14  Liberia      8    14  6.43 -9.43  1395.0\n","15  Liberia      9    14  6.43 -9.43  3362.0\n","16  Liberia     10    14  6.43 -9.43     NaN\n","17  Liberia     11    14  6.43 -9.43     NaN\n","18  Liberia     12    14  6.43 -9.43     NaN"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":514},"id":"vTAS74BpZfyb","executionInfo":{"elapsed":1066,"status":"ok","timestamp":1619980375033,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"222690ea-02db-4367-c6b4-4dea77921432"},"source":["# Selecting Records with Columns without certain values\n","# ---\n","# We will select all other records apart from the Liberia ones.\n","# Let's confirm our result by checking a sample of 10 records.\n","# ---\n","#\n","other_country_records = ebola_df[~ebola_df.Country.isin(['Guinea'])]\n","other_country_records.sample(15 )"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country</th>\n","      <th>Month</th>\n","      <th>Year</th>\n","      <th>Lat</th>\n","      <th>Lon</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>18</th>\n","      <td>Liberia</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Senegal</td>\n","      <td>9</td>\n","      <td>14</td>\n","      <td>14.50</td>\n","      <td>-14.45</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Sierra Leone</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>8.46</td>\n","      <td>-11.78</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Liberia</td>\n","      <td>11</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Mali</td>\n","      <td>11</td>\n","      <td>14</td>\n","      <td>17.57</td>\n","      <td>-4.00</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Liberia</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>107.0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Sierra Leone</td>\n","      <td>8</td>\n","      <td>14</td>\n","      <td>8.46</td>\n","      <td>-11.78</td>\n","      <td>1216.0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Liberia</td>\n","      <td>8</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>1395.0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Sierra Leone</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>8.46</td>\n","      <td>-11.78</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Liberia</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Sierra Leone</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>8.46</td>\n","      <td>-11.78</td>\n","      <td>50.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Liberia</td>\n","      <td>4</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>35.0</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Liberia</td>\n","      <td>9</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>3362.0</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Mali</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>17.57</td>\n","      <td>-4.00</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Liberia</td>\n","      <td>7</td>\n","      <td>14</td>\n","      <td>6.43</td>\n","      <td>-9.43</td>\n","      <td>329.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Country  Month  Year    Lat    Lon   Value\n","18       Liberia     12    14   6.43  -9.43     NaN\n","22       Senegal      9    14  14.50 -14.45     3.0\n","30  Sierra Leone     12    14   8.46 -11.78     NaN\n","17       Liberia     11    14   6.43  -9.43     NaN\n","20          Mali     11    14  17.57  -4.00     8.0\n","12       Liberia      6    14   6.43  -9.43   107.0\n","26  Sierra Leone      8    14   8.46 -11.78  1216.0\n","14       Liberia      8    14   6.43  -9.43  1395.0\n","28  Sierra Leone     10    14   8.46 -11.78     NaN\n","16       Liberia     10    14   6.43  -9.43     NaN\n","23  Sierra Leone      5    14   8.46 -11.78    50.0\n","10       Liberia      4    14   6.43  -9.43    35.0\n","15       Liberia      9    14   6.43  -9.43  3362.0\n","19          Mali     10    14  17.57  -4.00     1.0\n","13       Liberia      7    14   6.43  -9.43   329.0"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"markdown","metadata":{"id":"4S6nBEpDZq6E"},"source":["### <font color=\"green\">Challenges</font>"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-cM9sp_IZq6G","executionInfo":{"elapsed":1417,"status":"ok","timestamp":1619982085792,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"eef34859-6720-4ee5-d83a-315f9c3edbe6"},"source":["# Challenge 1\n","# ---\n","# Select and preview the most similar banknotes length measurements?\n","# ---\n","# Dataset url = https://bit.ly/2yT9oAU\n","# ---\n","# \n","bn_df = pd.read_csv('https://bit.ly/2yT9oAU')\n","\n","#bn_df.head(10)\n","list(bn_df['Length'].unique())"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[214.8,\n"," 214.6,\n"," 215.0,\n"," 215.7,\n"," 215.5,\n"," 214.5,\n"," 214.9,\n"," 215.2,\n"," 215.3,\n"," 215.1,\n"," 214.7,\n"," 215.6,\n"," 215.9,\n"," 213.9,\n"," 214.4,\n"," 214.3,\n"," 215.4,\n"," 213.8,\n"," 214.1,\n"," 214.2,\n"," 216.3]"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WxgVC-26Zq6I","executionInfo":{"elapsed":1711,"status":"ok","timestamp":1619983153518,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"f8d24ffd-f1dc-40c7-ba31-3e56c1ed44b1"},"source":["# Challenge 2\n","# ---\n","# Select and preview the least similar banknotes diagonal measurements? \n","# ---\n","# \n","list(bn_df['Diagonal'].unique())"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[141.0,\n"," 141.7,\n"," 142.2,\n"," 142.0,\n"," 141.8,\n"," 141.4,\n"," 141.6,\n"," 141.9,\n"," 140.7,\n"," 141.5,\n"," 141.1,\n"," 142.3,\n"," 142.4,\n"," 142.1,\n"," 141.3,\n"," 140.9,\n"," 141.2,\n"," 140.8,\n"," 139.6,\n"," 140.6,\n"," 139.8,\n"," 139.5,\n"," 140.2,\n"," 140.3,\n"," 139.7,\n"," 139.9,\n"," 139.4,\n"," 139.2,\n"," 140.1,\n"," 140.0,\n"," 138.3,\n"," 139.3,\n"," 138.1,\n"," 139.0,\n"," 137.9,\n"," 138.4,\n"," 139.1,\n"," 138.8,\n"," 138.6,\n"," 137.8,\n"," 138.7,\n"," 138.5]"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RzPM-f_FZq6K","executionInfo":{"elapsed":849,"status":"ok","timestamp":1619983891233,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"02bf3b1a-bb1c-4497-b577-20405357a341"},"source":["# Challenge 3\n","# ---\n","# How many banknotes had a left measurement and right measurement greater than 129?\n","# Get a sample of the records and later determine the no.\n","# Hint: Sample  Use len() to determine the no. of items.\n","# ---\n","# \n","len(bn_df[(bn_df['Left'] > 129) & (bn_df['Right'] > 129)]\n",")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["198"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"mxCkESI_ZA5A"},"source":["## 4. Ranking / Sorting"]},{"cell_type":"markdown","metadata":{"id":"iDnNGL-mZhJ9"},"source":["### Examples"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"JB7Sd98YZhKw","executionInfo":{"elapsed":1277,"status":"ok","timestamp":1619983900533,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"8e4d8d3c-aa75-4744-be00-1faa27186355"},"source":["# Sorting in Ascending / Descending Order \n","# ---\n","# From the ebola dataset sort the Guinea records in descending order\n","# ---\n","# OUR CODE GOES BELOW\n","# \n","guinea_records = ebola_df[ebola_df.Country.isin(['Guinea'])].sort_values(by='Value', ascending=1)\n","guinea_records.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country</th>\n","      <th>Month</th>\n","      <th>Year</th>\n","      <th>Lat</th>\n","      <th>Lon</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Guinea</td>\n","      <td>3</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>122.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Guinea</td>\n","      <td>4</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>224.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Guinea</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>291.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Guinea</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>413.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Guinea</td>\n","      <td>7</td>\n","      <td>14</td>\n","      <td>9.95</td>\n","      <td>-9.7</td>\n","      <td>460.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Country  Month  Year   Lat  Lon  Value\n","0  Guinea      3    14  9.95 -9.7  122.0\n","1  Guinea      4    14  9.95 -9.7  224.0\n","2  Guinea      5    14  9.95 -9.7  291.0\n","3  Guinea      6    14  9.95 -9.7  413.0\n","4  Guinea      7    14  9.95 -9.7  460.0"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":111},"id":"Xqp_I7LiZhKo","executionInfo":{"elapsed":848,"status":"ok","timestamp":1619983973426,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"dbc65757-2d54-4aca-b29b-f2c9e71a4eda"},"source":["# Ranking in Ascending Order\n","# ---\n","# Create a new column that is the rank of the value of 'Value' in descending order\n","# ---\n","# \n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country</th>\n","      <th>Month</th>\n","      <th>Year</th>\n","      <th>Lat</th>\n","      <th>Lon</th>\n","      <th>Value</th>\n","      <th>Ranking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>20</th>\n","      <td>Mali</td>\n","      <td>11</td>\n","      <td>14</td>\n","      <td>17.57</td>\n","      <td>-4.0</td>\n","      <td>8.0</td>\n","      <td>19.0</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Mali</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>17.57</td>\n","      <td>-4.0</td>\n","      <td>1.0</td>\n","      <td>21.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Country  Month  Year    Lat  Lon  Value  Ranking\n","20    Mali     11    14  17.57 -4.0    8.0     19.0\n","19    Mali     10    14  17.57 -4.0    1.0     21.5"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"markdown","metadata":{"id":"qP3PtIAAZsBG"},"source":["### <font color=\"green\">Challenges</font>"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":49},"id":"awH7EcF_ZsBI","executionInfo":{"elapsed":791,"status":"ok","timestamp":1619985776846,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"69d96f38-960a-4b81-e6f6-549adc554896"},"source":["# Challenge 1\n","# ---\n","# From the ebola dataset, select the Mali records with more \n","# than 100 cases and sort them in descending order. \n","# ---\n","# \n","mali_df = ebola_df[ebola_df.Country.isin(['Mali']) > 100].sort_values(by='Value', ascending=0)\n","mali_df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country</th>\n","      <th>Month</th>\n","      <th>Year</th>\n","      <th>Lat</th>\n","      <th>Lon</th>\n","      <th>Value</th>\n","      <th>Ranking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["Empty DataFrame\n","Columns: [Country, Month, Year, Lat, Lon, Value, Ranking]\n","Index: []"]},"metadata":{"tags":[]},"execution_count":38}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"aw5EjsOPZsBK","executionInfo":{"elapsed":1372,"status":"ok","timestamp":1619986405799,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"d9ba391b-fe6a-46f8-99a0-161f322e9ebe"},"source":["# Challenge 2\n","# ---\n","# From the banknotes dataset, find out which records had the largest \n","# diagonal length? In addition, rank them by left size.\n","# --- \n","# Dataset url = https://bit.ly/2yT9oAU\n","# ---\n","# \n","dia_df= bn_df.sort_values(by=\"Diagonal\", ascending=0)\n","dia_df[\"Ranking\"] = dia_df[\"Left\"].rank(ascending=False)\n","dia_df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>conterfeit</th>\n","      <th>Length</th>\n","      <th>Left</th>\n","      <th>Right</th>\n","      <th>Bottom</th>\n","      <th>Top</th>\n","      <th>Diagonal</th>\n","      <th>Ranking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>26</th>\n","      <td>0</td>\n","      <td>215.5</td>\n","      <td>130.2</td>\n","      <td>130.1</td>\n","      <td>8.9</td>\n","      <td>9.8</td>\n","      <td>142.4</td>\n","      <td>91.0</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>0</td>\n","      <td>214.8</td>\n","      <td>129.7</td>\n","      <td>129.7</td>\n","      <td>8.6</td>\n","      <td>9.1</td>\n","      <td>142.3</td>\n","      <td>170.0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>0</td>\n","      <td>215.3</td>\n","      <td>130.4</td>\n","      <td>130.4</td>\n","      <td>8.0</td>\n","      <td>11.0</td>\n","      <td>142.3</td>\n","      <td>51.5</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>0</td>\n","      <td>214.4</td>\n","      <td>129.8</td>\n","      <td>129.2</td>\n","      <td>8.9</td>\n","      <td>9.4</td>\n","      <td>142.3</td>\n","      <td>157.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>214.8</td>\n","      <td>129.7</td>\n","      <td>129.7</td>\n","      <td>8.7</td>\n","      <td>9.6</td>\n","      <td>142.2</td>\n","      <td>170.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    conterfeit  Length   Left  Right  Bottom   Top  Diagonal  Ranking\n","26           0   215.5  130.2  130.1     8.9   9.8     142.4     91.0\n","31           0   214.8  129.7  129.7     8.6   9.1     142.3    170.0\n","25           0   215.3  130.4  130.4     8.0  11.0     142.3     51.5\n","40           0   214.4  129.8  129.2     8.9   9.4     142.3    157.0\n","2            0   214.8  129.7  129.7     8.7   9.6     142.2    170.0"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"markdown","metadata":{"id":"YC9AVuitZFD8"},"source":["## 5. Aggregate Functions "]},{"cell_type":"markdown","metadata":{"id":"UxbUs5stZiZs"},"source":["### Examples"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lMkqHrLdZiZv","executionInfo":{"elapsed":997,"status":"ok","timestamp":1619987552667,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"0abbd699-74ec-4d87-b74b-e533f5cc3c6b"},"source":["# Example 1\n","# ---\n","# Shape\n","# ---\n","# How many Liberian records do we have in our ebola dataset?\n","# ---\n","# (records, columns)\n","#\n","liberia_records = ebola_df[ebola_df.Country.isin(['Liberia'])]\n","liberia_records.shape\n","\n","# (9 records, 7 columns)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(9, 7)"]},"metadata":{"tags":[]},"execution_count":51}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1mb9r-5uhXRb","executionInfo":{"elapsed":2494,"status":"ok","timestamp":1619987564227,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"af8ef001-e3c6-4122-ab6e-8242267e0e83"},"source":["# Example 2\n","# ---\n","# Count() Function\n","# ---\n","# How many values do we have accoss our variables in our ebola dataset?\n","# ---\n","#\n","liberia_records = ebola_df[ebola_df.Country.isin(['Liberia'])]\n","liberia_records.count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Country    9\n","Month      9\n","Year       9\n","Lat        9\n","Lon        9\n","Value      6\n","Ranking    6\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":53}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fv0c4tTEZiaB","executionInfo":{"elapsed":1231,"status":"ok","timestamp":1619987566272,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"e97cd218-a422-4c4e-ffef-3bbc86f11af5"},"source":["# Example 3\n","# ---\n","# Unique Occurrences\n","# ---\n","# Were all records in our ebola dataset unique?\n","# ---\n","# \n","ebola_df[ebola_df.duplicated()].shape\n","\n","# Yes, there were no duplicate records"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0, 7)"]},"metadata":{"tags":[]},"execution_count":54}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fQsRKwb1eeWB","executionInfo":{"elapsed":1339,"status":"ok","timestamp":1619986458474,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"f2d568cc-f6f9-4398-8673-10412e0e7bc3"},"source":["# Example 4\n","# ---\n","# Sum\n","# ---\n","# How many ebola cases in Sierra Leone were reported given the ebola dataset?\n","# ---\n","# \n","sierra_cases_sum = ebola_df[ebola_df.Country.isin(['Sierra Leone'])][['Value']].sum() \n","sierra_cases_sum"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Value    3978.0\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":44}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rLSxUtujZGe9","executionInfo":{"elapsed":1336,"status":"ok","timestamp":1619986458479,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"c5febacd-5539-4a80-f7c4-f4d2034665da"},"source":["# Example 5\n","# ---\n","# Minimum\n","# ---\n","# Which record had the least no of ebola cases?\n","# ---\n","# \n","least_cases = ebola_df.min()\n","least_cases "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Country    Guinea\n","Month           3\n","Year           14\n","Lat          6.43\n","Lon        -14.45\n","Value           1\n","Ranking         1\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":45}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u943169peXFP","executionInfo":{"elapsed":1337,"status":"ok","timestamp":1619986458484,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"143b17f7-d15a-4689-d078-9e47ef3f162a"},"source":["# Maximum\n","# ---\n","# Which record had the highest no of ebola cases?\n","# ---\n","# \n","highest_cases = ebola_df.max()\n","highest_cases"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Country    Sierra Leone\n","Month                12\n","Year                 14\n","Lat               17.57\n","Lon                  -4\n","Value              3362\n","Ranking            21.5\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":46}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G5-TLQHQeYsK","executionInfo":{"elapsed":1332,"status":"ok","timestamp":1619986458486,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"bf3e7011-1bdf-405b-90bf-1f9a20e60001"},"source":["# Mean\n","# ---\n","# What was the average number of ebola cases in Sierra Leone?\n","# ---\n","# \n","sierra_cases_avg = ebola_df[ebola_df.Country.isin(['Sierra Leone'])][['Value']].mean() \n","sierra_cases_avg"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Value    795.6\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":47}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OpX6s0yueecR","executionInfo":{"elapsed":1328,"status":"ok","timestamp":1619986458488,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"e4da1e4b-da0d-409d-edf6-46f75e773164"},"source":["# Mode\n","# ---\n","# What was the most frequent value in the Ebola dataset?\n","# ---\n","# \n","frequent_values_df = ebola_df['Country'].mode() \n","frequent_values_df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    Guinea\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":48}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wWpB21E9CiJn","executionInfo":{"elapsed":1322,"status":"ok","timestamp":1619986458490,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"58b8f7b6-eed9-4fd5-ae84-d8d076f19a2b"},"source":["# Median\n","# ---\n","# The median value of the Ebola cases.\n","# ---\n","# \n","median_values_df = ebola_df['Value'].median() \n","median_values_df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["265.0"]},"metadata":{"tags":[]},"execution_count":49}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"KhVsLoBoedbc","executionInfo":{"elapsed":1317,"status":"ok","timestamp":1619986458493,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"ac78a52c-d874-4a0e-cb2b-340f0b33f550"},"source":["# Summary Statistics\n","# ---\n","# Create a descriptive statistics table of the given ebola dataset \n","# in preparation for further analysis.\n","# ---\n","# \n","ebola_df.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Month</th>\n","      <th>Year</th>\n","      <th>Lat</th>\n","      <th>Lon</th>\n","      <th>Value</th>\n","      <th>Ranking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>31.00000</td>\n","      <td>31.0</td>\n","      <td>31.000000</td>\n","      <td>31.000000</td>\n","      <td>22.000000</td>\n","      <td>22.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>8.16129</td>\n","      <td>14.0</td>\n","      <td>9.328710</td>\n","      <td>-10.097097</td>\n","      <td>569.772727</td>\n","      <td>11.500000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.59611</td>\n","      <td>0.0</td>\n","      <td>3.026781</td>\n","      <td>2.163978</td>\n","      <td>816.056950</td>\n","      <td>6.491753</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>3.00000</td>\n","      <td>14.0</td>\n","      <td>6.430000</td>\n","      <td>-14.450000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>6.00000</td>\n","      <td>14.0</td>\n","      <td>6.430000</td>\n","      <td>-11.780000</td>\n","      <td>38.750000</td>\n","      <td>6.250000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>8.00000</td>\n","      <td>14.0</td>\n","      <td>8.460000</td>\n","      <td>-9.700000</td>\n","      <td>265.000000</td>\n","      <td>11.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>10.00000</td>\n","      <td>14.0</td>\n","      <td>9.950000</td>\n","      <td>-9.430000</td>\n","      <td>711.500000</td>\n","      <td>16.750000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>12.00000</td>\n","      <td>14.0</td>\n","      <td>17.570000</td>\n","      <td>-4.000000</td>\n","      <td>3362.000000</td>\n","      <td>21.500000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          Month  Year        Lat        Lon        Value    Ranking\n","count  31.00000  31.0  31.000000  31.000000    22.000000  22.000000\n","mean    8.16129  14.0   9.328710 -10.097097   569.772727  11.500000\n","std     2.59611   0.0   3.026781   2.163978   816.056950   6.491753\n","min     3.00000  14.0   6.430000 -14.450000     1.000000   1.000000\n","25%     6.00000  14.0   6.430000 -11.780000    38.750000   6.250000\n","50%     8.00000  14.0   8.460000  -9.700000   265.000000  11.500000\n","75%    10.00000  14.0   9.950000  -9.430000   711.500000  16.750000\n","max    12.00000  14.0  17.570000  -4.000000  3362.000000  21.500000"]},"metadata":{"tags":[]},"execution_count":50}]},{"cell_type":"markdown","metadata":{"id":"1mUNWEtSZsi9"},"source":["### <font color=\"green\">Challenges</font>"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"R-G7d9HyZsi_","executionInfo":{"elapsed":2059,"status":"ok","timestamp":1619991515724,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"ac0d251f-fca1-4b43-e3b0-340205a7a8c5"},"source":["# Challenge 1\n","# ---\n","# How many records can be found in the following insurance dataset?\n","# ---\n","# Insurance Dataset url = https://bit.ly/2y5CRYc\n","# ---\n","# This dataset contains anonymised patient data.\n","# ---\n","# OUR CODE GOES BELOW\n","# \n","\n","insurance_df = pd.read_csv('https://bit.ly/2y5CRYc')\n","\n","insurance_df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>expenses</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.9</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.8</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.0</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.7</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.9</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.86</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   age     sex   bmi  children smoker     region  expenses\n","0   19  female  27.9         0    yes  southwest  16884.92\n","1   18    male  33.8         1     no  southeast   1725.55\n","2   28    male  33.0         3     no  southeast   4449.46\n","3   33    male  22.7         0     no  northwest  21984.47\n","4   32    male  28.9         0     no  northwest   3866.86"]},"metadata":{"tags":[]},"execution_count":60}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dl1KEjeoZsjB","executionInfo":{"elapsed":858,"status":"ok","timestamp":1619988687846,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"b519fe6e-5fc5-4f9a-cb20-80fbc625dfe4"},"source":["# Challenge 2\n","# ---\n","# Are there any duplicates in the insurance dataset?\n","# ---\n","# OUR CODE GOES BELOW\n","# \n","insurance_df[insurance_df.duplicated()].shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1, 7)"]},"metadata":{"tags":[]},"execution_count":59}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vDj1GABnZsjD","executionInfo":{"elapsed":1255,"status":"ok","timestamp":1619991684887,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"569e7b22-0939-44c2-bd7b-7c327816a822"},"source":["# Challenge 3\n","# ---\n","# Which regions did the patients come from?\n","# ---\n","# OUR CODE GOES BELOW\n","# \n","#insurance_df = pd.read_csv('https://bit.ly/2y5CRYc')\n"," \n","insurance_df[\"region\"].unique()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['southwest', 'southeast', 'northwest', 'northeast'], dtype=object)"]},"metadata":{"tags":[]},"execution_count":64}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TAtrNHs824ay","executionInfo":{"elapsed":812,"status":"ok","timestamp":1619992132964,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"b8b6bb94-e75c-44b2-c4b8-4e5dfaa1833d"},"source":["# Challenge 4\n","# ---\n","# What was the highest bmi recorded for patients from northwest and southwest regions?\n","# ---\n","# OUR CODE GOES BELOW\n","# \n","insurance_df[(insurance_df['region'].isin(['northwest'])) | (insurance_df['region'].isin(['southwest']))][['bmi']].max()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bmi    47.6\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":70}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tsloZ4Bo24P1","executionInfo":{"elapsed":803,"status":"ok","timestamp":1619991824322,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"942165dc-ad8b-446b-ec34-9ec27e048a03"},"source":["# Challenge 5\n","# ---\n","# What was the youngest age of a patient?\n","# ---\n","# OUR CODE GOES BELOW\n","#\n","youngest_age_df = insurance_df['age'].min() \n","youngest_age_df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["18"]},"metadata":{"tags":[]},"execution_count":66}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XffQqHOd24KD","executionInfo":{"elapsed":719,"status":"ok","timestamp":1619992214050,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"a93b32e0-506f-4eef-a4e2-4e66df83ccbe"},"source":["# Challenge 6\n","# ---\n","# What was the average bmi recorded for patients above 50 years old?\n","# ---\n","# OUR CODE GOES BELOW\n","#\n","insurance_df[insurance_df['age']>50][['bmi']].mean()\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bmi    31.706461\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":71}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2IULqwYi235v","executionInfo":{"elapsed":795,"status":"ok","timestamp":1619992466273,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"4233a167-0ce3-4f58-c5bf-a5170f6e746d"},"source":["# Challenge 7\n","# ---\n","# How much was spent collectively by male and female patients?\n","# ---\n","# OUR CODE GOES BELOW\n","#\n","#insurance_df[(insurance_df['sex'].isin(['male'])) | (insurance_df['sex'].isin(['female']))][['expenses']].sum()\n","print(insurance_df.groupby('sex').expenses.sum())\n","print('Total', insurance_df['expenses'].sum())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["sex\n","female    8321061.23\n","male      9434763.96\n","Name: expenses, dtype: float64\n","Total 17755825.19\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"MojDFr9UZH05"},"source":["## 6. Grouping"]},{"cell_type":"markdown","metadata":{"id":"iPIq_mwkZjUS"},"source":["### Examples"]},{"cell_type":"code","metadata":{"id":"06M0UADbE13H"},"source":["# Let's first load and preview the dataset that we will need for our examples \n","# ---\n","#\n","insurance_df = pd.read_csv('https://bit.ly/2y5CRYc')\n","insurance_df.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"OO1t8mqJZjUT","executionInfo":{"elapsed":1001,"status":"ok","timestamp":1619993133135,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"ed561385-d693-43ab-bd15-9aef83ab8c84"},"source":["# Example 1\n","# ---\n","# The groupby() function is used to split the data into groups based on some criteria.\n","# ---\n","# We will start by grouping by a single column and including an aggregate function as shown.\n","# ---\n","# NB: We will not store any our dataframe in a variable for ease of\n","# performing computations\n","# ---\n","#\n","insurance_df.groupby('region').mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>expenses</th>\n","    </tr>\n","    <tr>\n","      <th>region</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>northeast</th>\n","      <td>39.268519</td>\n","      <td>29.176235</td>\n","      <td>1.046296</td>\n","      <td>13406.384691</td>\n","    </tr>\n","    <tr>\n","      <th>northwest</th>\n","      <td>39.196923</td>\n","      <td>29.201846</td>\n","      <td>1.147692</td>\n","      <td>12417.575169</td>\n","    </tr>\n","    <tr>\n","      <th>southeast</th>\n","      <td>38.939560</td>\n","      <td>33.359341</td>\n","      <td>1.049451</td>\n","      <td>14735.411538</td>\n","    </tr>\n","    <tr>\n","      <th>southwest</th>\n","      <td>39.455385</td>\n","      <td>30.596615</td>\n","      <td>1.141538</td>\n","      <td>12346.937908</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 age        bmi  children      expenses\n","region                                                 \n","northeast  39.268519  29.176235  1.046296  13406.384691\n","northwest  39.196923  29.201846  1.147692  12417.575169\n","southeast  38.939560  33.359341  1.049451  14735.411538\n","southwest  39.455385  30.596615  1.141538  12346.937908"]},"metadata":{"tags":[]},"execution_count":80}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":142},"id":"LlsRE01jPsVi","executionInfo":{"elapsed":881,"status":"ok","timestamp":1619993185174,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"fc2f52e4-6826-4e6a-8cd9-8dbcce2f8b53"},"source":["# Example 2\n","# ---\n","# We can get the first entry for each gender by doing the following\n","# ---\n","# NB: You can also get the last one too using last()\n","# ---\n","# \n","insurance_df.groupby('sex').last()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>expenses</th>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>female</th>\n","      <td>61</td>\n","      <td>29.1</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>29141.36</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>50</td>\n","      <td>31.0</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>10600.55</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        age   bmi  children smoker     region  expenses\n","sex                                                    \n","female   61  29.1         0    yes  northwest  29141.36\n","male     50  31.0         3     no  northwest  10600.55"]},"metadata":{"tags":[]},"execution_count":82}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EbK46keMM8ny","executionInfo":{"elapsed":961,"status":"ok","timestamp":1619993230886,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"cbf4e77d-db33-4343-d2b2-6335c2b21371"},"source":["# Example 3\n","# ---\n","# We can group a single column by another column then apply an aggregate function as shown\n","# ---\n","# \n","insurance_df['expenses'].groupby([insurance_df['sex']]).sum()\n","\n","# Method 2\n","# ---\n","# NB: The groupby output will have an index or multi-index on rows corresponding \n","# to our chosen grouping variables. To avoid setting this index, \n","# we pass “as_index = False” to the groupby operation\n","# ---\n","#insurance_df.groupby('sex', as_index = False)['expenses'].sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sex\n","female    8321061.23\n","male      9434763.96\n","Name: expenses, dtype: float64"]},"metadata":{"tags":[]},"execution_count":85}]},{"cell_type":"code","metadata":{"id":"e2HYu24NOb3B"},"source":["# Example 4\n","# ---\n","# We can group the region column by another column i.e. bmi then apply an aggregate function\n","# as shown\n","# ---\n","#\n","insurance_df['bmi'].groupby([insurance_df['region']]).mean()\n","\n","# Method 2\n","# ---\n","# insurance_df.groupby('region', as_index = False)['bmi'].mean()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"KlZPbe_wP_YW","executionInfo":{"elapsed":1012,"status":"ok","timestamp":1619993328594,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"},"user_tz":-180},"outputId":"2d313dfc-9b9a-4ee1-bde9-9b5bcbf4bd29"},"source":["# Example 5\n","# ---\n","# We can create a summary statistical table as shown below\n","# ---\n","insurance_df['expenses'].groupby([insurance_df['region']]).describe()\n","\n","# Method 2\n","# ---\n","# insurance_df.groupby('region', as_index = False)['expenses'].describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","    <tr>\n","      <th>region</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>northeast</th>\n","      <td>324.0</td>\n","      <td>13406.384691</td>\n","      <td>11255.802916</td>\n","      <td>1694.80</td>\n","      <td>5194.3225</td>\n","      <td>10057.655</td>\n","      <td>16687.3650</td>\n","      <td>58571.07</td>\n","    </tr>\n","    <tr>\n","      <th>northwest</th>\n","      <td>325.0</td>\n","      <td>12417.575169</td>\n","      <td>11072.276880</td>\n","      <td>1621.34</td>\n","      <td>4719.7400</td>\n","      <td>8965.800</td>\n","      <td>14711.7400</td>\n","      <td>60021.40</td>\n","    </tr>\n","    <tr>\n","      <th>southeast</th>\n","      <td>364.0</td>\n","      <td>14735.411538</td>\n","      <td>13971.098797</td>\n","      <td>1121.87</td>\n","      <td>4440.8850</td>\n","      <td>9294.130</td>\n","      <td>19526.2875</td>\n","      <td>63770.43</td>\n","    </tr>\n","    <tr>\n","      <th>southwest</th>\n","      <td>325.0</td>\n","      <td>12346.937908</td>\n","      <td>11557.179033</td>\n","      <td>1241.57</td>\n","      <td>4751.0700</td>\n","      <td>8798.590</td>\n","      <td>13462.5200</td>\n","      <td>52590.83</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["           count          mean           std  ...        50%         75%       max\n","region                                        ...                                 \n","northeast  324.0  13406.384691  11255.802916  ...  10057.655  16687.3650  58571.07\n","northwest  325.0  12417.575169  11072.276880  ...   8965.800  14711.7400  60021.40\n","southeast  364.0  14735.411538  13971.098797  ...   9294.130  19526.2875  63770.43\n","southwest  325.0  12346.937908  11557.179033  ...   8798.590  13462.5200  52590.83\n","\n","[4 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":86}]},{"cell_type":"code","metadata":{"colab":{"background_save":true},"id":"-pjNXDxMQg5W","outputId":"24b2ac88-232a-4331-d612-1440891c6633"},"source":["# Example 6\n","# ---\n","# Further seeing how we can group a column by another column as shown \n","# \n","insurance_df['children'].groupby([insurance_df['region']]).sum()\n","\n","# Method 2\n","# ---\n","#\n","# insurance_df.groupby('region', as_index = False)['children'].sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["region\n","northeast    339\n","northwest    373\n","southeast    382\n","southwest    371\n","Name: children, dtype: int64"]},"metadata":{"tags":[]},"execution_count":0}]},{"cell_type":"code","metadata":{"id":"5JiJ-exNX0Uk"},"source":["# Example 7\n","# ---\n","# Applying multiple aggregate functions after grouping a column by another column\n","# ---\n","# \n","insurance_df['expenses'].groupby([insurance_df['region']]).agg([min, max, sum])\n","\n","# Method 2\n","# insurance_df.groupby(['region'], as_index = False).agg({'expenses': [min, max, sum] })"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dw7F3D8-Z7rQ","colab":{"base_uri":"https://localhost:8080/","height":328},"executionInfo":{"status":"ok","timestamp":1619995067341,"user_tz":-180,"elapsed":1017,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"b1ff972f-8a28-4742-ff5f-47f443822466"},"source":["# Example 8\n","# ---\n","# We can also apply multiple aggregate functions after grouping a column by another column\n","# ---\n","# \n","insurance_df.groupby(['region', 'sex'], as_index = False).agg({'expenses': [min, max, sum] })"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th>region</th>\n","      <th>sex</th>\n","      <th colspan=\"3\" halign=\"left\">expenses</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th>min</th>\n","      <th>max</th>\n","      <th>sum</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>northeast</td>\n","      <td>female</td>\n","      <td>2196.47</td>\n","      <td>58571.07</td>\n","      <td>2085465.70</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>northeast</td>\n","      <td>male</td>\n","      <td>1694.80</td>\n","      <td>48549.18</td>\n","      <td>2258202.94</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>northwest</td>\n","      <td>female</td>\n","      <td>2117.34</td>\n","      <td>55135.40</td>\n","      <td>2046698.72</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>northwest</td>\n","      <td>male</td>\n","      <td>1621.34</td>\n","      <td>60021.40</td>\n","      <td>1989013.21</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>southeast</td>\n","      <td>female</td>\n","      <td>1607.51</td>\n","      <td>63770.43</td>\n","      <td>2362442.12</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>southeast</td>\n","      <td>male</td>\n","      <td>1121.87</td>\n","      <td>62592.87</td>\n","      <td>3001247.68</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>southwest</td>\n","      <td>female</td>\n","      <td>1727.79</td>\n","      <td>48824.45</td>\n","      <td>1826454.69</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>southwest</td>\n","      <td>male</td>\n","      <td>1241.57</td>\n","      <td>52590.83</td>\n","      <td>2186300.13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      region     sex expenses                      \n","                          min       max         sum\n","0  northeast  female  2196.47  58571.07  2085465.70\n","1  northeast    male  1694.80  48549.18  2258202.94\n","2  northwest  female  2117.34  55135.40  2046698.72\n","3  northwest    male  1621.34  60021.40  1989013.21\n","4  southeast  female  1607.51  63770.43  2362442.12\n","5  southeast    male  1121.87  62592.87  3001247.68\n","6  southwest  female  1727.79  48824.45  1826454.69\n","7  southwest    male  1241.57  52590.83  2186300.13"]},"metadata":{"tags":[]},"execution_count":112}]},{"cell_type":"code","metadata":{"id":"S9Q79b2NRbuO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619995080382,"user_tz":-180,"elapsed":1204,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"187dd17f-6cee-4618-9264-30d169444cfd"},"source":["# Example 9\n","# ---\n","# Grouping by of multiple columns and then applying an aggregate function\n","# ---\n","# \n","insurance_df['expenses'].groupby([insurance_df['region'], insurance_df['sex']]).sum()\n","\n","# Method 2\n","# ---\n","# insurance_df.groupby(['region', 'sex'], as_index = False)['expenses'].sum()\n","\n","# Method 3\n","# ---\n","# insurance_df.groupby(['region', 'sex']).agg({'expenses': ['sum']})"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["region     sex   \n","northeast  female    2085465.70\n","           male      2258202.94\n","northwest  female    2046698.72\n","           male      1989013.21\n","southeast  female    2362442.12\n","           male      3001247.68\n","southwest  female    1826454.69\n","           male      2186300.13\n","Name: expenses, dtype: float64"]},"metadata":{"tags":[]},"execution_count":113}]},{"cell_type":"markdown","metadata":{"id":"sWGVGLXeZtLH"},"source":["### <font color=\"green\">Challenges</font>"]},{"cell_type":"code","metadata":{"id":"0ipcashTZtLI","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1619994233931,"user_tz":-180,"elapsed":1497,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"e625a06d-6eb0-43eb-bd61-d0e915da8bb1"},"source":["# Let's load and preview the dataset that we will use for the given challenges.\n","# ---\n","# The dataset contains customer invoice data.\n","# ---\n","# Dataset url = https://bit.ly/SuperMarketSalesDB\n","# ---\n","#  \n","invoice_df = pd.read_csv('https://bit.ly/SuperMarketSalesDB')\n","invoice_df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Invoice ID</th>\n","      <th>Branch</th>\n","      <th>City</th>\n","      <th>Customer type</th>\n","      <th>Gender</th>\n","      <th>Product line</th>\n","      <th>Unit price</th>\n","      <th>Quantity</th>\n","      <th>Tax 5%</th>\n","      <th>Total</th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Payment</th>\n","      <th>cogs</th>\n","      <th>gross margin percentage</th>\n","      <th>gross income</th>\n","      <th>Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>750-67-8428</td>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Member</td>\n","      <td>Female</td>\n","      <td>Health and beauty</td>\n","      <td>74.69</td>\n","      <td>7</td>\n","      <td>26.1415</td>\n","      <td>548.9715</td>\n","      <td>1/5/2019</td>\n","      <td>13:08</td>\n","      <td>Ewallet</td>\n","      <td>522.83</td>\n","      <td>4.761905</td>\n","      <td>26.1415</td>\n","      <td>9.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>226-31-3081</td>\n","      <td>C</td>\n","      <td>Naypyitaw</td>\n","      <td>Normal</td>\n","      <td>Female</td>\n","      <td>Electronic accessories</td>\n","      <td>15.28</td>\n","      <td>5</td>\n","      <td>3.8200</td>\n","      <td>80.2200</td>\n","      <td>3/8/2019</td>\n","      <td>10:29</td>\n","      <td>Cash</td>\n","      <td>76.40</td>\n","      <td>4.761905</td>\n","      <td>3.8200</td>\n","      <td>9.6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>631-41-3108</td>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Normal</td>\n","      <td>Male</td>\n","      <td>Home and lifestyle</td>\n","      <td>46.33</td>\n","      <td>7</td>\n","      <td>16.2155</td>\n","      <td>340.5255</td>\n","      <td>3/3/2019</td>\n","      <td>13:23</td>\n","      <td>Credit card</td>\n","      <td>324.31</td>\n","      <td>4.761905</td>\n","      <td>16.2155</td>\n","      <td>7.4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>123-19-1176</td>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Member</td>\n","      <td>Male</td>\n","      <td>Health and beauty</td>\n","      <td>58.22</td>\n","      <td>8</td>\n","      <td>23.2880</td>\n","      <td>489.0480</td>\n","      <td>1/27/2019</td>\n","      <td>20:33</td>\n","      <td>Ewallet</td>\n","      <td>465.76</td>\n","      <td>4.761905</td>\n","      <td>23.2880</td>\n","      <td>8.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>373-73-7910</td>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Normal</td>\n","      <td>Male</td>\n","      <td>Sports and travel</td>\n","      <td>86.31</td>\n","      <td>7</td>\n","      <td>30.2085</td>\n","      <td>634.3785</td>\n","      <td>2/8/2019</td>\n","      <td>10:37</td>\n","      <td>Ewallet</td>\n","      <td>604.17</td>\n","      <td>4.761905</td>\n","      <td>30.2085</td>\n","      <td>5.3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Invoice ID Branch       City  ... gross margin percentage gross income Rating\n","0  750-67-8428      A     Yangon  ...                4.761905      26.1415    9.1\n","1  226-31-3081      C  Naypyitaw  ...                4.761905       3.8200    9.6\n","2  631-41-3108      A     Yangon  ...                4.761905      16.2155    7.4\n","3  123-19-1176      A     Yangon  ...                4.761905      23.2880    8.4\n","4  373-73-7910      A     Yangon  ...                4.761905      30.2085    5.3\n","\n","[5 rows x 17 columns]"]},"metadata":{"tags":[]},"execution_count":89}]},{"cell_type":"code","metadata":{"id":"IrFwkaMuZtLK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619994388242,"user_tz":-180,"elapsed":806,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"f907a6a9-c03e-443c-b084-7f6e16248778"},"source":["# Challenge 1\n","# ---\n","# Question: What was the average tax per city?\n","# ---\n","# OUR CODE GOES BELOW \n","# insurance_df['expenses'].groupby([insurance_df['sex']]).sum()\n","invoice_df['Tax 5%'].groupby([invoice_df['City']]).mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["City\n","Mandalay     15.232024\n","Naypyitaw    16.052367\n","Yangon       14.874001\n","Name: Tax 5%, dtype: float64"]},"metadata":{"tags":[]},"execution_count":91}]},{"cell_type":"code","metadata":{"id":"KcuTMahpZtLM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619995973752,"user_tz":-180,"elapsed":1101,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"0ab3e4c7-2da3-4bf8-8acc-dcedb9f366de"},"source":["# Challenge 2\n","# ---\n","# Question: How much did female members from the city of Yagon spend?\n","# -\n","# OUR CODE GOES BELOW \n","invoice_df['cogs'].groupby([invoice_df['City'], invoice_df['Gender']]).sum()\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["City       Gender\n","Mandalay   Female    50407.90\n","           Male      50732.74\n","Naypyitaw  Female    58748.06\n","           Male      46555.47\n","Yangon     Female    50732.54\n","           Male      50410.67\n","Name: cogs, dtype: float64"]},"metadata":{"tags":[]},"execution_count":136}]},{"cell_type":"code","metadata":{"id":"UuElKxR0o1ws"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_WtKM6mSo1j-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619996059613,"user_tz":-180,"elapsed":895,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"4957b5a0-c1f5-4a2b-90f4-0897c7ff5c77"},"source":["# Challenge 4\n","# ---\n","# Question: What was the sum of goods sold across all branches?\n","# ---\n","# OUR CODE GOES BELOW \n","# \n","invoice_df['Quantity'].sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5510"]},"metadata":{"tags":[]},"execution_count":138}]},{"cell_type":"code","metadata":{"id":"gpRpOLPAo1eE","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1619996086638,"user_tz":-180,"elapsed":1411,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"633e37fb-c2fa-4421-850d-1ae3090c3e4c"},"source":["# Challenge 5\n","# ---\n","# Question: Which branches collected the most amount(max) of money? \n","# ---\n","# OUR CODE GOES BELOW \n","# \n","invoice_df['City'].max()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Yangon'"]},"metadata":{"tags":[]},"execution_count":139}]},{"cell_type":"code","metadata":{"id":"KAhpUL2Ro1T5","colab":{"base_uri":"https://localhost:8080/","height":173},"executionInfo":{"status":"ok","timestamp":1619996967937,"user_tz":-180,"elapsed":1052,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"20fa33df-eace-4d25-bc9a-4a70b6a00d68"},"source":["# Challenge 6\n","# ---\n","# Question: Which were the top rated branches?\n","# ---\n","# OUR CODE GOES BELOW \n","# \n","invoice_df.groupby(['Branch'], as_index = False).agg({'Rating': [min, max, sum] })"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th>Branch</th>\n","      <th colspan=\"3\" halign=\"left\">Rating</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th>min</th>\n","      <th>max</th>\n","      <th>sum</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A</td>\n","      <td>4.0</td>\n","      <td>10.0</td>\n","      <td>2389.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>B</td>\n","      <td>4.0</td>\n","      <td>10.0</td>\n","      <td>2263.6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>C</td>\n","      <td>4.0</td>\n","      <td>10.0</td>\n","      <td>2319.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Branch Rating              \n","            min   max     sum\n","0      A    4.0  10.0  2389.2\n","1      B    4.0  10.0  2263.6\n","2      C    4.0  10.0  2319.9"]},"metadata":{"tags":[]},"execution_count":153}]},{"cell_type":"code","metadata":{"id":"_NMGSpxlo1M3"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"k7c7R2Sfo08U","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619997061630,"user_tz":-180,"elapsed":893,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"36092bce-1fc0-463d-e10f-557999f917ba"},"source":["# Challenge 8\n","# ---\n","# Question: Show the products line that sold the most indicating the rating.\n","# ---\n","# OUR CODE GOES BELOW \n","# \n","invoice_df['Rating'].groupby([invoice_df['Product line']]).max()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Product line\n","Electronic accessories    10.0\n","Fashion accessories        9.9\n","Food and beverages         9.9\n","Health and beauty         10.0\n","Home and lifestyle         9.9\n","Sports and travel         10.0\n","Name: Rating, dtype: float64"]},"metadata":{"tags":[]},"execution_count":157}]},{"cell_type":"markdown","metadata":{"id":"6XZbcORGZLd0"},"source":["## 7. Pivot Tables"]},{"cell_type":"markdown","metadata":{"id":"xldYtGZ-Zjz5"},"source":["### Examples"]},{"cell_type":"code","metadata":{"id":"XyNlcAEhZjz6","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1619997304072,"user_tz":-180,"elapsed":1005,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"396423ca-5ec9-4aa1-ad0f-b3e46eead1e2"},"source":["# Example 1\n","# ---\n","# A pivot tables is a summary table and comprises of \n","# outcomes similar to the group by tables.\n","# --- \n","# We will start working with pivot tables by getting one column \n","# and applying an aggregate function as shown below\n","# ---\n","# \n","pd.pivot_table(insurance_df, index=['region'], aggfunc='mean')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>expenses</th>\n","    </tr>\n","    <tr>\n","      <th>region</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>northeast</th>\n","      <td>39.268519</td>\n","      <td>29.176235</td>\n","      <td>1.046296</td>\n","      <td>13406.384691</td>\n","    </tr>\n","    <tr>\n","      <th>northwest</th>\n","      <td>39.196923</td>\n","      <td>29.201846</td>\n","      <td>1.147692</td>\n","      <td>12417.575169</td>\n","    </tr>\n","    <tr>\n","      <th>southeast</th>\n","      <td>38.939560</td>\n","      <td>33.359341</td>\n","      <td>1.049451</td>\n","      <td>14735.411538</td>\n","    </tr>\n","    <tr>\n","      <th>southwest</th>\n","      <td>39.455385</td>\n","      <td>30.596615</td>\n","      <td>1.141538</td>\n","      <td>12346.937908</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 age        bmi  children      expenses\n","region                                                 \n","northeast  39.268519  29.176235  1.046296  13406.384691\n","northwest  39.196923  29.201846  1.147692  12417.575169\n","southeast  38.939560  33.359341  1.049451  14735.411538\n","southwest  39.455385  30.596615  1.141538  12346.937908"]},"metadata":{"tags":[]},"execution_count":158}]},{"cell_type":"code","metadata":{"id":"E9eEtnPKZjz-","colab":{"base_uri":"https://localhost:8080/","height":142},"executionInfo":{"status":"ok","timestamp":1619997313413,"user_tz":-180,"elapsed":738,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"d4c3cba4-e0ec-4214-eb95-fd52b092abec"},"source":["# Example 2\n","# ---\n","# Getting the first entry for each gender\n","# NB: You can get the last one too using last().\n","# In addition, note the that the columns have been arranged alphabetically.\n","# ---\n","# \n","pd.pivot_table(insurance_df, index=['sex'], aggfunc='first')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>expenses</th>\n","      <th>region</th>\n","      <th>smoker</th>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>female</th>\n","      <td>19</td>\n","      <td>27.9</td>\n","      <td>0</td>\n","      <td>16884.92</td>\n","      <td>southwest</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>18</td>\n","      <td>33.8</td>\n","      <td>1</td>\n","      <td>1725.55</td>\n","      <td>southeast</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        age   bmi  children  expenses     region smoker\n","sex                                                    \n","female   19  27.9         0  16884.92  southwest    yes\n","male     18  33.8         1   1725.55  southeast     no"]},"metadata":{"tags":[]},"execution_count":159}]},{"cell_type":"code","metadata":{"id":"XncXWHbLxNqv"},"source":["# Example 3\n","# ---\n","# We can group a single column by another column then apply an aggregate function as shown\n","# ---\n","# We will use numpy to compute the mean\n","#\n","pd.pivot_table(insurance_df, index=['sex'], aggfunc={'expenses': np.mean})"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ek2sW9X2zqwz","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1619999279434,"user_tz":-180,"elapsed":2364,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"5486db37-eca5-4fb4-ed42-9b765a205f9a"},"source":["# Example 4\n","# ---\n","# Grouping region by another column i.e. bmi, applying an aggregate function\n","# ---\n","#\n","pd.pivot_table(insurance_df, index=['region'], aggfunc={'bmi': np.mean})"],"execution_count":160,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>bmi</th>\n","    </tr>\n","    <tr>\n","      <th>region</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>northeast</th>\n","      <td>29.176235</td>\n","    </tr>\n","    <tr>\n","      <th>northwest</th>\n","      <td>29.201846</td>\n","    </tr>\n","    <tr>\n","      <th>southeast</th>\n","      <td>33.359341</td>\n","    </tr>\n","    <tr>\n","      <th>southwest</th>\n","      <td>30.596615</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 bmi\n","region              \n","northeast  29.176235\n","northwest  29.201846\n","southeast  33.359341\n","southwest  30.596615"]},"metadata":{"tags":[]},"execution_count":160}]},{"cell_type":"code","metadata":{"id":"ZfOhsM1I0bNu"},"source":["# Example 5\n","# ---\n","# Using a pivote table, we can also create a summary statistical table as shown below\n","# ---\n","#\n","pd.pivot_table(insurance_df, index=['region'], aggfunc={'expenses': 'describe'})"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3_brcCVY3gHq"},"source":["# Example 6\n","# ---\n","# Getting the no. of children in each region\n","# ---\n","#  \n","# \n","pd.pivot_table(insurance_df, index=['region'], aggfunc={'children': sum}) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ldDrVxC54Al8"},"source":["# Example 6\n","# ---\n","# Applying multiple aggregate functions to a group\n","# ---\n","# \n","pd.pivot_table(insurance_df, index=['region', 'sex'], aggfunc={'expenses': [min, max, sum]})"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"e1HkBiWr51y6","colab":{"base_uri":"https://localhost:8080/","height":328},"executionInfo":{"status":"ok","timestamp":1619999286591,"user_tz":-180,"elapsed":2268,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"0c66efcd-ee81-489d-fe68-201116cbf493"},"source":["# Example 7\n","# ---\n","# Applying multiple aggregate functions to a group\n","# ---\n","# \n","pd.pivot_table(insurance_df, index=['region', 'sex'], aggfunc={'expenses': sum})"],"execution_count":161,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>expenses</th>\n","    </tr>\n","    <tr>\n","      <th>region</th>\n","      <th>sex</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">northeast</th>\n","      <th>female</th>\n","      <td>2085465.70</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>2258202.94</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">northwest</th>\n","      <th>female</th>\n","      <td>2046698.72</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>1989013.21</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">southeast</th>\n","      <th>female</th>\n","      <td>2362442.12</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>3001247.68</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">southwest</th>\n","      <th>female</th>\n","      <td>1826454.69</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>2186300.13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                    expenses\n","region    sex               \n","northeast female  2085465.70\n","          male    2258202.94\n","northwest female  2046698.72\n","          male    1989013.21\n","southeast female  2362442.12\n","          male    3001247.68\n","southwest female  1826454.69\n","          male    2186300.13"]},"metadata":{"tags":[]},"execution_count":161}]},{"cell_type":"markdown","metadata":{"id":"q9c7In767vRZ"},"source":["### <font color=\"green\">Challenges</font>"]},{"cell_type":"markdown","metadata":{"id":"WDtAMSQd7y3B"},"source":["The challenges in this section will be same as the ones group by challenges. Compare your solutions with the ones you got in the previous section."]},{"cell_type":"code","metadata":{"id":"8U-l2XmL7vRd","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1619999387362,"user_tz":-180,"elapsed":2217,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"afbcab9b-702c-4d33-8b18-a54b6af2dadb"},"source":["# You will use the supermarket dataset you previously used. \n","# ---\n","# The dataset contains customer invoice data.\n","# ---\n","# Dataset url = https://bit.ly/SuperMarketSalesDB\n","# ---\n","#  \n","supermarket_df = pd.read_csv('https://bit.ly/SuperMarketSalesDB')\n","supermarket_df.head()"],"execution_count":162,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Invoice ID</th>\n","      <th>Branch</th>\n","      <th>City</th>\n","      <th>Customer type</th>\n","      <th>Gender</th>\n","      <th>Product line</th>\n","      <th>Unit price</th>\n","      <th>Quantity</th>\n","      <th>Tax 5%</th>\n","      <th>Total</th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Payment</th>\n","      <th>cogs</th>\n","      <th>gross margin percentage</th>\n","      <th>gross income</th>\n","      <th>Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>750-67-8428</td>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Member</td>\n","      <td>Female</td>\n","      <td>Health and beauty</td>\n","      <td>74.69</td>\n","      <td>7</td>\n","      <td>26.1415</td>\n","      <td>548.9715</td>\n","      <td>1/5/2019</td>\n","      <td>13:08</td>\n","      <td>Ewallet</td>\n","      <td>522.83</td>\n","      <td>4.761905</td>\n","      <td>26.1415</td>\n","      <td>9.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>226-31-3081</td>\n","      <td>C</td>\n","      <td>Naypyitaw</td>\n","      <td>Normal</td>\n","      <td>Female</td>\n","      <td>Electronic accessories</td>\n","      <td>15.28</td>\n","      <td>5</td>\n","      <td>3.8200</td>\n","      <td>80.2200</td>\n","      <td>3/8/2019</td>\n","      <td>10:29</td>\n","      <td>Cash</td>\n","      <td>76.40</td>\n","      <td>4.761905</td>\n","      <td>3.8200</td>\n","      <td>9.6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>631-41-3108</td>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Normal</td>\n","      <td>Male</td>\n","      <td>Home and lifestyle</td>\n","      <td>46.33</td>\n","      <td>7</td>\n","      <td>16.2155</td>\n","      <td>340.5255</td>\n","      <td>3/3/2019</td>\n","      <td>13:23</td>\n","      <td>Credit card</td>\n","      <td>324.31</td>\n","      <td>4.761905</td>\n","      <td>16.2155</td>\n","      <td>7.4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>123-19-1176</td>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Member</td>\n","      <td>Male</td>\n","      <td>Health and beauty</td>\n","      <td>58.22</td>\n","      <td>8</td>\n","      <td>23.2880</td>\n","      <td>489.0480</td>\n","      <td>1/27/2019</td>\n","      <td>20:33</td>\n","      <td>Ewallet</td>\n","      <td>465.76</td>\n","      <td>4.761905</td>\n","      <td>23.2880</td>\n","      <td>8.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>373-73-7910</td>\n","      <td>A</td>\n","      <td>Yangon</td>\n","      <td>Normal</td>\n","      <td>Male</td>\n","      <td>Sports and travel</td>\n","      <td>86.31</td>\n","      <td>7</td>\n","      <td>30.2085</td>\n","      <td>634.3785</td>\n","      <td>2/8/2019</td>\n","      <td>10:37</td>\n","      <td>Ewallet</td>\n","      <td>604.17</td>\n","      <td>4.761905</td>\n","      <td>30.2085</td>\n","      <td>5.3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Invoice ID Branch       City  ... gross margin percentage gross income Rating\n","0  750-67-8428      A     Yangon  ...                4.761905      26.1415    9.1\n","1  226-31-3081      C  Naypyitaw  ...                4.761905       3.8200    9.6\n","2  631-41-3108      A     Yangon  ...                4.761905      16.2155    7.4\n","3  123-19-1176      A     Yangon  ...                4.761905      23.2880    8.4\n","4  373-73-7910      A     Yangon  ...                4.761905      30.2085    5.3\n","\n","[5 rows x 17 columns]"]},"metadata":{"tags":[]},"execution_count":162}]},{"cell_type":"code","metadata":{"id":"YQ47XAX67vRm","colab":{"base_uri":"https://localhost:8080/","height":450},"executionInfo":{"status":"ok","timestamp":1619999476017,"user_tz":-180,"elapsed":1007,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"e4c79b91-63ba-4eb8-ba03-b3b79a3ce12c"},"source":["# Challenge 1\n","# ---\n","# Question: What was the average tax per city?\n","# ---\n","# OUR CODE GOES BELOW \n","# \n","pd.pivot_table(supermarket_df, index=['Product line','Tax 5%'], aggfunc='mean')"],"execution_count":164,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Quantity</th>\n","      <th>Rating</th>\n","      <th>Total</th>\n","      <th>Unit price</th>\n","      <th>cogs</th>\n","      <th>gross income</th>\n","      <th>gross margin percentage</th>\n","    </tr>\n","    <tr>\n","      <th>City</th>\n","      <th>Tax 5%</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">Mandalay</th>\n","      <th>0.8875</th>\n","      <td>1.0</td>\n","      <td>8.6</td>\n","      <td>18.6375</td>\n","      <td>17.75</td>\n","      <td>17.75</td>\n","      <td>0.8875</td>\n","      <td>4.761905</td>\n","    </tr>\n","    <tr>\n","      <th>0.9575</th>\n","      <td>1.0</td>\n","      <td>9.5</td>\n","      <td>20.1075</td>\n","      <td>19.15</td>\n","      <td>19.15</td>\n","      <td>0.9575</td>\n","      <td>4.761905</td>\n","    </tr>\n","    <tr>\n","      <th>1.2725</th>\n","      <td>1.0</td>\n","      <td>5.1</td>\n","      <td>26.7225</td>\n","      <td>25.45</td>\n","      <td>25.45</td>\n","      <td>1.2725</td>\n","      <td>4.761905</td>\n","    </tr>\n","    <tr>\n","      <th>1.3535</th>\n","      <td>1.0</td>\n","      <td>5.3</td>\n","      <td>28.4235</td>\n","      <td>27.07</td>\n","      <td>27.07</td>\n","      <td>1.3535</td>\n","      <td>4.761905</td>\n","    </tr>\n","    <tr>\n","      <th>1.4760</th>\n","      <td>2.0</td>\n","      <td>4.3</td>\n","      <td>30.9960</td>\n","      <td>14.76</td>\n","      <td>29.52</td>\n","      <td>1.4760</td>\n","      <td>4.761905</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">Yangon</th>\n","      <th>44.1405</th>\n","      <td>9.0</td>\n","      <td>9.3</td>\n","      <td>926.9505</td>\n","      <td>98.09</td>\n","      <td>882.81</td>\n","      <td>44.1405</td>\n","      <td>4.761905</td>\n","    </tr>\n","    <tr>\n","      <th>44.3350</th>\n","      <td>10.0</td>\n","      <td>7.3</td>\n","      <td>931.0350</td>\n","      <td>88.67</td>\n","      <td>886.70</td>\n","      <td>44.3350</td>\n","      <td>4.761905</td>\n","    </tr>\n","    <tr>\n","      <th>44.3970</th>\n","      <td>9.0</td>\n","      <td>8.4</td>\n","      <td>932.3370</td>\n","      <td>98.66</td>\n","      <td>887.94</td>\n","      <td>44.3970</td>\n","      <td>4.761905</td>\n","    </tr>\n","    <tr>\n","      <th>45.3250</th>\n","      <td>10.0</td>\n","      <td>7.3</td>\n","      <td>951.8250</td>\n","      <td>90.65</td>\n","      <td>906.50</td>\n","      <td>45.3250</td>\n","      <td>4.761905</td>\n","    </tr>\n","    <tr>\n","      <th>49.4900</th>\n","      <td>10.0</td>\n","      <td>8.7</td>\n","      <td>1039.2900</td>\n","      <td>98.98</td>\n","      <td>989.80</td>\n","      <td>49.4900</td>\n","      <td>4.761905</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>997 rows × 7 columns</p>\n","</div>"],"text/plain":["                  Quantity  Rating  ...  gross income  gross margin percentage\n","City     Tax 5%                     ...                                       \n","Mandalay 0.8875        1.0     8.6  ...        0.8875                 4.761905\n","         0.9575        1.0     9.5  ...        0.9575                 4.761905\n","         1.2725        1.0     5.1  ...        1.2725                 4.761905\n","         1.3535        1.0     5.3  ...        1.3535                 4.761905\n","         1.4760        2.0     4.3  ...        1.4760                 4.761905\n","...                    ...     ...  ...           ...                      ...\n","Yangon   44.1405       9.0     9.3  ...       44.1405                 4.761905\n","         44.3350      10.0     7.3  ...       44.3350                 4.761905\n","         44.3970       9.0     8.4  ...       44.3970                 4.761905\n","         45.3250      10.0     7.3  ...       45.3250                 4.761905\n","         49.4900      10.0     8.7  ...       49.4900                 4.761905\n","\n","[997 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":164}]},{"cell_type":"code","metadata":{"id":"M54iMgRt7vRv","colab":{"base_uri":"https://localhost:8080/","height":266},"executionInfo":{"status":"ok","timestamp":1619999717392,"user_tz":-180,"elapsed":851,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"aaf1ed7f-9189-46c0-b5ef-5da35932e7d8"},"source":["# Challenge 2\n","# ---\n","# Question: How much did female members from the city of Yagon spend?\n","# ---\n","# OUR CODE GOES BELOW \n","# #\n","pd.pivot_table(supermarket_df, index=['City', 'Gender'], aggfunc='sum')"],"execution_count":173,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Quantity</th>\n","      <th>Rating</th>\n","      <th>Tax 5%</th>\n","      <th>Total</th>\n","      <th>Unit price</th>\n","      <th>cogs</th>\n","      <th>gross income</th>\n","      <th>gross margin percentage</th>\n","    </tr>\n","    <tr>\n","      <th>City</th>\n","      <th>Gender</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Mandalay</th>\n","      <th>Female</th>\n","      <td>911</td>\n","      <td>1114.0</td>\n","      <td>2520.3950</td>\n","      <td>52928.2950</td>\n","      <td>8775.24</td>\n","      <td>50407.90</td>\n","      <td>2520.3950</td>\n","      <td>771.428571</td>\n","    </tr>\n","    <tr>\n","      <th>Male</th>\n","      <td>909</td>\n","      <td>1149.6</td>\n","      <td>2536.6370</td>\n","      <td>53269.3770</td>\n","      <td>9703.64</td>\n","      <td>50732.74</td>\n","      <td>2536.6370</td>\n","      <td>809.523810</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Naypyitaw</th>\n","      <th>Female</th>\n","      <td>1049</td>\n","      <td>1274.1</td>\n","      <td>2937.4030</td>\n","      <td>61685.4630</td>\n","      <td>9882.13</td>\n","      <td>58748.06</td>\n","      <td>2937.4030</td>\n","      <td>847.619048</td>\n","    </tr>\n","    <tr>\n","      <th>Male</th>\n","      <td>782</td>\n","      <td>1045.8</td>\n","      <td>2327.7735</td>\n","      <td>48883.2435</td>\n","      <td>8685.63</td>\n","      <td>46555.47</td>\n","      <td>2327.7735</td>\n","      <td>714.285714</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Yangon</th>\n","      <th>Female</th>\n","      <td>909</td>\n","      <td>1101.1</td>\n","      <td>2536.6270</td>\n","      <td>53269.1670</td>\n","      <td>9029.87</td>\n","      <td>50732.54</td>\n","      <td>2536.6270</td>\n","      <td>766.666667</td>\n","    </tr>\n","    <tr>\n","      <th>Male</th>\n","      <td>950</td>\n","      <td>1288.1</td>\n","      <td>2520.5335</td>\n","      <td>52931.2035</td>\n","      <td>9595.62</td>\n","      <td>50410.67</td>\n","      <td>2520.5335</td>\n","      <td>852.380952</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                  Quantity  Rating  ...  gross income  gross margin percentage\n","City      Gender                    ...                                       \n","Mandalay  Female       911  1114.0  ...     2520.3950               771.428571\n","          Male         909  1149.6  ...     2536.6370               809.523810\n","Naypyitaw Female      1049  1274.1  ...     2937.4030               847.619048\n","          Male         782  1045.8  ...     2327.7735               714.285714\n","Yangon    Female       909  1101.1  ...     2536.6270               766.666667\n","          Male         950  1288.1  ...     2520.5335               852.380952\n","\n","[6 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":173}]},{"cell_type":"code","metadata":{"id":"n7ua8NHY7vSI","colab":{"base_uri":"https://localhost:8080/","height":173},"executionInfo":{"status":"ok","timestamp":1619999748656,"user_tz":-180,"elapsed":967,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"8b89483c-f8e1-4df6-c8a6-46643f264af9"},"source":["# Challenge 3\n","# ---\n","# Question: How much was spent across all cities?\n","# ---\n","# OUR CODE GOES BELOW \n","# \n","pd.pivot_table(supermarket_df, index=['City'], aggfunc='sum')"],"execution_count":174,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Quantity</th>\n","      <th>Rating</th>\n","      <th>Tax 5%</th>\n","      <th>Total</th>\n","      <th>Unit price</th>\n","      <th>cogs</th>\n","      <th>gross income</th>\n","      <th>gross margin percentage</th>\n","    </tr>\n","    <tr>\n","      <th>City</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Mandalay</th>\n","      <td>1820</td>\n","      <td>2263.6</td>\n","      <td>5057.0320</td>\n","      <td>106197.6720</td>\n","      <td>18478.88</td>\n","      <td>101140.64</td>\n","      <td>5057.0320</td>\n","      <td>1580.952381</td>\n","    </tr>\n","    <tr>\n","      <th>Naypyitaw</th>\n","      <td>1831</td>\n","      <td>2319.9</td>\n","      <td>5265.1765</td>\n","      <td>110568.7065</td>\n","      <td>18567.76</td>\n","      <td>105303.53</td>\n","      <td>5265.1765</td>\n","      <td>1561.904762</td>\n","    </tr>\n","    <tr>\n","      <th>Yangon</th>\n","      <td>1859</td>\n","      <td>2389.2</td>\n","      <td>5057.1605</td>\n","      <td>106200.3705</td>\n","      <td>18625.49</td>\n","      <td>101143.21</td>\n","      <td>5057.1605</td>\n","      <td>1619.047619</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["           Quantity  Rating  ...  gross income  gross margin percentage\n","City                         ...                                       \n","Mandalay       1820  2263.6  ...     5057.0320              1580.952381\n","Naypyitaw      1831  2319.9  ...     5265.1765              1561.904762\n","Yangon         1859  2389.2  ...     5057.1605              1619.047619\n","\n","[3 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":174}]},{"cell_type":"code","metadata":{"id":"F4Cdnyqb7vSN","colab":{"base_uri":"https://localhost:8080/","height":173},"executionInfo":{"status":"ok","timestamp":1620000280337,"user_tz":-180,"elapsed":810,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"81abbca4-6947-48f5-c35c-b7692a70cb87"},"source":["# Challenge 4\n","# ---\n","# Question: What was the sum of goods sold across all branches?\n","# ---\n","# OUR CODE GOES BELOW \n","# \n","\n","pd.pivot_table(supermarket_df, index=['Branch'], aggfunc={'Quantity': sum}) "],"execution_count":190,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Quantity</th>\n","    </tr>\n","    <tr>\n","      <th>Branch</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>A</th>\n","      <td>1859</td>\n","    </tr>\n","    <tr>\n","      <th>B</th>\n","      <td>1820</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>1831</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        Quantity\n","Branch          \n","A           1859\n","B           1820\n","C           1831"]},"metadata":{"tags":[]},"execution_count":190}]},{"cell_type":"code","metadata":{"id":"BiqXSy4Q7vSS","colab":{"base_uri":"https://localhost:8080/","height":173},"executionInfo":{"status":"ok","timestamp":1620000295728,"user_tz":-180,"elapsed":862,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"cfb215e1-9331-4bcd-87b7-6adbd5c6c2ac"},"source":["# Challenge 5\n","# ---\n","# Question: Which branches collected the most amount of money? \n","# ---\n","# OUR CODE GOES BELOW \n","# \n","pd.pivot_table(supermarket_df, index=['Branch'], aggfunc={'Total': sum})"],"execution_count":191,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total</th>\n","    </tr>\n","    <tr>\n","      <th>Branch</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>A</th>\n","      <td>106200.3705</td>\n","    </tr>\n","    <tr>\n","      <th>B</th>\n","      <td>106197.6720</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>110568.7065</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              Total\n","Branch             \n","A       106200.3705\n","B       106197.6720\n","C       110568.7065"]},"metadata":{"tags":[]},"execution_count":191}]},{"cell_type":"code","metadata":{"id":"PXKJv3tW7vSY","colab":{"base_uri":"https://localhost:8080/","height":173},"executionInfo":{"status":"ok","timestamp":1620000338529,"user_tz":-180,"elapsed":1310,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"642a835c-c446-4e4b-e75a-aef4695eaa90"},"source":["# Challenge 6\n","# ---\n","# Question: Which were the top rated branches?\n","# ---\n","# OUR CODE GOES BELOW \n","# \n","pd.pivot_table(supermarket_df, index=['Branch'], aggfunc={'Rating': sum})"],"execution_count":192,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rating</th>\n","    </tr>\n","    <tr>\n","      <th>Branch</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>A</th>\n","      <td>2389.2</td>\n","    </tr>\n","    <tr>\n","      <th>B</th>\n","      <td>2263.6</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>2319.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        Rating\n","Branch        \n","A       2389.2\n","B       2263.6\n","C       2319.9"]},"metadata":{"tags":[]},"execution_count":192}]},{"cell_type":"code","metadata":{"id":"0MF7tVGR7vSd","colab":{"base_uri":"https://localhost:8080/","height":297},"executionInfo":{"status":"ok","timestamp":1620000608378,"user_tz":-180,"elapsed":1128,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"4eee1d84-b3c9-4026-849a-e7b8db2734d1"},"source":["# Challenge 7\n","# ---\n","# Question: Make a comparison between non-members who made cash payments and credit card payments.\n","# ---\n","# OUR CODE GOES BELOW \n","# \n","pd.pivot_table(supermarket_df, index=['Customer type', 'Payment'], aggfunc={'Total': 'describe'})"],"execution_count":200,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th colspan=\"8\" halign=\"left\">Total</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>count</th>\n","      <th>max</th>\n","      <th>mean</th>\n","      <th>min</th>\n","      <th>std</th>\n","    </tr>\n","    <tr>\n","      <th>Customer type</th>\n","      <th>Payment</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">Member</th>\n","      <th>Cash</th>\n","      <td>109.354875</td>\n","      <td>255.78000</td>\n","      <td>490.42875</td>\n","      <td>168.0</td>\n","      <td>950.25</td>\n","      <td>325.363188</td>\n","      <td>10.6785</td>\n","      <td>250.855850</td>\n","    </tr>\n","    <tr>\n","      <th>Credit card</th>\n","      <td>120.298500</td>\n","      <td>275.00025</td>\n","      <td>484.78500</td>\n","      <td>172.0</td>\n","      <td>1042.65</td>\n","      <td>335.880654</td>\n","      <td>16.2015</td>\n","      <td>249.090793</td>\n","    </tr>\n","    <tr>\n","      <th>Ewallet</th>\n","      <td>121.569000</td>\n","      <td>270.01800</td>\n","      <td>479.90250</td>\n","      <td>161.0</td>\n","      <td>1034.46</td>\n","      <td>321.682957</td>\n","      <td>14.6790</td>\n","      <td>245.117510</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">Normal</th>\n","      <th>Cash</th>\n","      <td>139.954500</td>\n","      <td>270.25950</td>\n","      <td>469.99575</td>\n","      <td>176.0</td>\n","      <td>1003.59</td>\n","      <td>326.963378</td>\n","      <td>16.1070</td>\n","      <td>235.286695</td>\n","    </tr>\n","    <tr>\n","      <th>Credit card</th>\n","      <td>105.635250</td>\n","      <td>202.81800</td>\n","      <td>454.23525</td>\n","      <td>139.0</td>\n","      <td>1039.29</td>\n","      <td>309.320860</td>\n","      <td>12.6945</td>\n","      <td>266.865625</td>\n","    </tr>\n","    <tr>\n","      <th>Ewallet</th>\n","      <td>124.422375</td>\n","      <td>239.20050</td>\n","      <td>457.54800</td>\n","      <td>184.0</td>\n","      <td>1023.75</td>\n","      <td>316.316038</td>\n","      <td>13.4190</td>\n","      <td>234.744761</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                Total             ...                     \n","                                  25%        50%  ...      min         std\n","Customer type Payment                             ...                     \n","Member        Cash         109.354875  255.78000  ...  10.6785  250.855850\n","              Credit card  120.298500  275.00025  ...  16.2015  249.090793\n","              Ewallet      121.569000  270.01800  ...  14.6790  245.117510\n","Normal        Cash         139.954500  270.25950  ...  16.1070  235.286695\n","              Credit card  105.635250  202.81800  ...  12.6945  266.865625\n","              Ewallet      124.422375  239.20050  ...  13.4190  234.744761\n","\n","[6 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":200}]},{"cell_type":"code","metadata":{"id":"v_YYoGhh7vSj","colab":{"base_uri":"https://localhost:8080/","height":297},"executionInfo":{"status":"ok","timestamp":1620000950830,"user_tz":-180,"elapsed":1196,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"153dbfbe-f0bd-4134-b3c1-3fc11af42484"},"source":["# Challenge 8\n","# ---\n","# Question: Show the products line that sold the most indicating the rating.\n","# ---\n","# OUR CODE GOES BELOW \n","# \n","pd.pivot_table(supermarket_df, index=['Product line'], aggfunc={'Rating': 'describe'})"],"execution_count":201,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th colspan=\"8\" halign=\"left\">Rating</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>count</th>\n","      <th>max</th>\n","      <th>mean</th>\n","      <th>min</th>\n","      <th>std</th>\n","    </tr>\n","    <tr>\n","      <th>Product line</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Electronic accessories</th>\n","      <td>5.500</td>\n","      <td>6.70</td>\n","      <td>8.35</td>\n","      <td>170.0</td>\n","      <td>10.0</td>\n","      <td>6.924706</td>\n","      <td>4.0</td>\n","      <td>1.702028</td>\n","    </tr>\n","    <tr>\n","      <th>Fashion accessories</th>\n","      <td>5.600</td>\n","      <td>6.95</td>\n","      <td>8.50</td>\n","      <td>178.0</td>\n","      <td>9.9</td>\n","      <td>7.029213</td>\n","      <td>4.0</td>\n","      <td>1.713437</td>\n","    </tr>\n","    <tr>\n","      <th>Food and beverages</th>\n","      <td>5.800</td>\n","      <td>7.30</td>\n","      <td>8.60</td>\n","      <td>174.0</td>\n","      <td>9.9</td>\n","      <td>7.113218</td>\n","      <td>4.0</td>\n","      <td>1.715181</td>\n","    </tr>\n","    <tr>\n","      <th>Health and beauty</th>\n","      <td>5.450</td>\n","      <td>7.20</td>\n","      <td>8.40</td>\n","      <td>152.0</td>\n","      <td>10.0</td>\n","      <td>7.003289</td>\n","      <td>4.0</td>\n","      <td>1.763817</td>\n","    </tr>\n","    <tr>\n","      <th>Home and lifestyle</th>\n","      <td>5.400</td>\n","      <td>7.00</td>\n","      <td>8.20</td>\n","      <td>160.0</td>\n","      <td>9.9</td>\n","      <td>6.837500</td>\n","      <td>4.1</td>\n","      <td>1.718627</td>\n","    </tr>\n","    <tr>\n","      <th>Sports and travel</th>\n","      <td>5.525</td>\n","      <td>6.70</td>\n","      <td>8.45</td>\n","      <td>166.0</td>\n","      <td>10.0</td>\n","      <td>6.916265</td>\n","      <td>4.0</td>\n","      <td>1.714477</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                       Rating                                                  \n","                          25%   50%   75%  count   max      mean  min       std\n","Product line                                                                   \n","Electronic accessories  5.500  6.70  8.35  170.0  10.0  6.924706  4.0  1.702028\n","Fashion accessories     5.600  6.95  8.50  178.0   9.9  7.029213  4.0  1.713437\n","Food and beverages      5.800  7.30  8.60  174.0   9.9  7.113218  4.0  1.715181\n","Health and beauty       5.450  7.20  8.40  152.0  10.0  7.003289  4.0  1.763817\n","Home and lifestyle      5.400  7.00  8.20  160.0   9.9  6.837500  4.1  1.718627\n","Sports and travel       5.525  6.70  8.45  166.0  10.0  6.916265  4.0  1.714477"]},"metadata":{"tags":[]},"execution_count":201}]},{"cell_type":"code","metadata":{"id":"wkmiFwF7jXeu"},"source":[""],"execution_count":null,"outputs":[]}]}