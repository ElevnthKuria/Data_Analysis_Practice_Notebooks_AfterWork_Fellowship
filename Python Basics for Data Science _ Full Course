{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of AfterWork Data Science: Python Basics for Data Science // Full Course","provenance":[{"file_id":"1PsW2DCLN2BWN0dtO0s5_M6ZAqqs79iuG","timestamp":1624692457559}],"collapsed_sections":["UMNPnf2i5SWr","jD-9Sma-ruMm","DJeVFrBtw_kA","wp_BS7DmxDcu","aFlF1bDQxHQO","_Czt2xj3xKtQ","apQZLg4WxQaT","5Kk6d63OxVQo","figZW-P0xWHu","QhEXtwvIxZhP","AZaNOe10xhBd","T8474dmmmBii","KoqcSYwQxtRK","b93FPbs0xuLv","oPUu3IMexvkM","TsVuSiuK9vLo","AX1eFoHBxioZ","xN0KYDlrxjzF","1KGAN1h-rhUT","6mfDGqy38176","BDggmS7ur3Wg","Am56-sCnr6vi","5enr7YOCsGiO","czwZIoMP8yq2","UVhxQgFF8KI_","vRf4lpd38TE8","qOcy-X35HV_t","HX5OKWTeH3y7","V3vakOO6H9Vh","RMTv6MI1IIT_","HHygJvHMIPgh","x_Sf1NXPpz0q","EqUWEUsNINyj","ExGMoK-pIb8p","ZfjZLNgMIeYh","dqhVm_8kN2tl","VtTVm3cvN_lP","qIxhQwTHOIjm","JdKpybEFOJOM","XJoETlR_OKHt","8w3U0HVEOccy","hDZ9eDtmOgLi","SxIaU06sOuYQ","GuR57OHgOBnM","eaq4UrFLONmb","bSurXHq_OOjc","hnyRRASVOPq4","okwTjEZ_PCiN","80kHsk0gQiX5","r6CjXb92QsKs","_We_Aif3Q_n5","sVrIv1ucRAtY","xaLN8jeYRDll","dGKEWiBwTVFM","WnXWTn9WTaJs","96-FMInjQs5S","z9M2LwKAQvN_","fnRxw0qjQ1aZ","HA99lKmhQ68W","z7mA-mghTmOc","qcpLR3a_XPLd","EnaCUxpRXT0J","ZX5LhYDuXV2O","7vliBrC5Xk65","0xG8q15EXnW_","2gYk4uIZYFKf","7vPUGzblYGj1","IhBdAGNeXa9N","kBHUUpINXev4","c10_umZGgZFg","hdEWP1SNnFHp","_TGroESwnRos","TbJ6OFKqnUTy","HxuW_VVCnVgw","8LarnuTTnalz","VSxz3OK9nb4P","_xf8ei3mnc3-","C4tY9xM-n6jP","qxG8RHFnniJT","dQlkT13Gnjid","6Pdl8p-QnmN1","93yfMyQWnovw","6T7Z10zUnquf","l4aSf1SQnsIc","wW6zZPzHpPkw","Tj7-43EzpXKP","9CbPFikcpb65","8TToTfDxpcsC","O0n2jmlupeUe","uBJfTBcDpooj","xVpVBXPkprnS","05xi5W5kpsYM","lY-G45bwqiq8","pZnqvIFlqrcF","iO82jGS5qwik","iU4HK7hrqiMO","UoUvopuiqz1A","_BlOlAaNq4Aj","yDuSe7aAq56q","rYrnAuYBryYC","WOi0gv2Dr83t","GgSYzCUYsCWG","-bAG0iH2sDiV","47gh_27esFHZ","m1FOyDx-r_C_","PgsptduxsKGg","88bM7tZ2sLI4"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"O1ZGC3xPs0Ta"},"source":["<font color=\"blue\">To use this notebook on Colaboratory, you will need to make a copy of it. Go to File > Save a Copy in Drive. You can then use the new copy that will appear in the new tab.</font>\n"]},{"cell_type":"markdown","metadata":{"id":"UMNPnf2i5SWr"},"source":["# Python Basics for Data Science // Full Course"]},{"cell_type":"markdown","metadata":{"id":"jD-9Sma-ruMm"},"source":["# 1. Variables, Printing and Comments"]},{"cell_type":"markdown","metadata":{"id":"DJeVFrBtw_kA"},"source":["## 1. Variables"]},{"cell_type":"markdown","metadata":{"id":"JzTFFLH9hofg"},"source":["A **python variable** is a reserved memory location that can be used to store values. Use to temporarily store information before manipulation."]},{"cell_type":"markdown","metadata":{"id":"wp_BS7DmxDcu"},"source":["#### <font color=\"blue\">Examples</font>"]},{"cell_type":"markdown","metadata":{"id":"aFlF1bDQxHQO"},"source":["##### <font color=\"blue\">Example 1</font>"]},{"cell_type":"code","metadata":{"id":"XPERUCVo5aTx","executionInfo":{"status":"ok","timestamp":1624692597420,"user_tz":-180,"elapsed":74,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}}},"source":["# Example 1\n","# ---\n","# Running this cell won't output anything because we have not asked python to do that.\n","# However, it will run anything that is not a comment. In our case, running this cell will\n","# execute the last line of our cell where we assign the value 10 to the variable. \n","# A few rules about variables is that they must begin with a letter, underscore, \n","# or non-number character. They must also not have spaces in between.\n","# ---\n","# OUR CODE GOES BELOW\n","#\n","a = 10  "],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_Czt2xj3xKtQ"},"source":["##### <font color=\"blue\">Example 2</font> "]},{"cell_type":"code","metadata":{"id":"u6IDQwRc5bWn","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1624692692766,"user_tz":-180,"elapsed":226,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"a7802623-dab7-4d74-b5b4-46a19d434ef5"},"source":["# Example 2\n","# ---\n","# Again, let's assign the value \"Earth\" to the variable planet. \n","# We use the equals sign, =, which is called an assignment operator to perform this operation.\n","# Again, running this cell won't output anything, it will only run our code.\n","# ---\n","# OUR CODE GOES BELOW\n","#\n","planet = \"Earth\"\n","planet"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Earth'"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"apQZLg4WxQaT"},"source":["##### <font color=\"blue\">Example 3</font> "]},{"cell_type":"code","metadata":{"id":"pO96_Ivb5cHT"},"source":["# Example 3\n","# ---\n","# Let's assign the value [\"This list has number element\", 4] to a variable called four.\n","# In example 1 and 2, we assigned values of different nature i.e. an integer 10 and a string \"Earth\".\n","# In our case now we will create a value of a different nature called a list. Don't worry about this,\n","# we will cover lists later on in the session. Just keep in mind that lists are enclosed with square\n","# brackets as shown below. You will also learn more about dictionaries which are enclosed with curly brackets. \n","# ---\n","# OUR CODE GOES BELOW\n","#\n","\n","four = [\"This list has number element\", 4]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5Kk6d63OxVQo"},"source":["#### <font color=\"green\">Challenges</font> "]},{"cell_type":"markdown","metadata":{"id":"figZW-P0xWHu"},"source":["##### <font color=\"green\">Challenge 1</font>"]},{"cell_type":"code","metadata":{"id":"9mCpedG0xcfs","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1624692948742,"user_tz":-180,"elapsed":669,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"aa37d322-4adf-429b-fff1-faf32f8bc19c"},"source":["# Challenge 1\n","# ---\n","# Question: Create a variable named account then assign it with the string 10,000. \n","# Just note this is not the answer: account = 10,000 or this account = 10000\n","# Hint: Learn from example 2.\n","# ---\n","# YOUR CODE GOES BELOW\n","# \n","\n","account = str(10000)\n","\n","account"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'10000'"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"QhEXtwvIxZhP"},"source":["##### <font color=\"green\">Challenge 2</font>"]},{"cell_type":"code","metadata":{"id":"SRG0iMPQxdHT","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1624693095873,"user_tz":-180,"elapsed":394,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"74cd9f82-3c3e-4df9-da3b-324c686f2d6b"},"source":["# Challenge 2\n","# ---\n","# Question: Assign the name J.K Rowling to the variable author.\n","# ---\n","# YOUR CODE GOES BELOW\n","# \n","\n","author = \"J.K Rowling\"\n","\n","author"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'J.K Rowling'"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"AZaNOe10xhBd"},"source":["## 2. Printing"]},{"cell_type":"markdown","metadata":{"id":"rAZBWVKUjBKS"},"source":["The **print()** function prints the specified message to the screen. This function is used to reveal what is stored in a variable."]},{"cell_type":"markdown","metadata":{"id":"T8474dmmmBii"},"source":["#### <font color=\"blue\">Examples</font>"]},{"cell_type":"markdown","metadata":{"id":"KoqcSYwQxtRK"},"source":["##### <font color=\"blue\">Example 1</font> "]},{"cell_type":"code","metadata":{"id":"ai3ZxHpcxw-J"},"source":["# Example 1\n","# ---\n","# Question: Print the text \"Hello!\" in the output console of this cell\n","# ---\n","# OUR CODE GOES BELOW\n","#\n","print(\"Hello!\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"b93FPbs0xuLv"},"source":["##### <font color=\"blue\">Example 2</font> "]},{"cell_type":"code","metadata":{"id":"HM9ouOKxxxh1"},"source":["# Example 2\n","# ---\n","# Question: Print the text \"Hello Valentine!\" and defining a whitespace as a seperator\n","# ---\n","# OUR CODE GOES BELOW\n","#\n","print(\"Hello\", \"Valentine!\", sep=\" \")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"oPUu3IMexvkM"},"source":["##### <font color=\"blue\">Example 3</font> "]},{"cell_type":"code","metadata":{"id":"4f4aOFsExyJa"},"source":["# Example 3 \n","# ---\n","# Question: Print out the following dictionary named colors = {'red', 'green', 'blue'},\n","# in the output console below \n","# ---\n","# OUR CODE GOES BELOW\n","# \n","colors = {'red', 'green', 'blue'}\n","colors"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TsVuSiuK9vLo"},"source":["#### <font color=\"green\">Challenges</font> "]},{"cell_type":"markdown","metadata":{"id":"AX1eFoHBxioZ"},"source":["##### <font color=\"green\">Challenge 1</font>"]},{"cell_type":"code","metadata":{"id":"h5d4FLXDxmd4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1624694040910,"user_tz":-180,"elapsed":403,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"ee6f27b1-e598-4bff-8fbd-ea934a6a9e49"},"source":["# Challenge 1\n","# ---\n","# Question: Using the print function print out this statement: \n","\n","# ---\n","# YOUR CODE GOES BELOW\n","#  \n","\n","print(\"I am excited to learn Data Science\")"],"execution_count":12,"outputs":[{"output_type":"stream","text":["I am excited to learn Data Science\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"xN0KYDlrxjzF"},"source":["##### <font color=\"green\">Challenge 2</font>"]},{"cell_type":"code","metadata":{"id":"j3A29Of8xnEG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1624693861464,"user_tz":-180,"elapsed":624,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"47bc5d1a-6906-4cf1-8007-eebde51502e0"},"source":["# Challenge 2\n","# ---\n","# Question: Print out three cities in the world, seperated by commas.\n","# ---\n","# YOUR CODE GOES BELOW\n","#  \n","\n","print(\"Congo\",\"Ghana\",\"USA\", sep=\",\")"],"execution_count":10,"outputs":[{"output_type":"stream","text":["Congo,Ghana,USA\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"1KGAN1h-rhUT"},"source":["## 3. Comments"]},{"cell_type":"markdown","metadata":{"id":"w4zEi3X-iSyT"},"source":["**Comments** are simple notes used in our code to provide explanatory information\n","about the code. Used to explain complex code."]},{"cell_type":"markdown","metadata":{"id":"6mfDGqy38176"},"source":["#### <font color=\"blue\">Examples</font>"]},{"cell_type":"markdown","metadata":{"id":"BDggmS7ur3Wg"},"source":["##### <font color=\"blue\">Example 1:</font> Single Line Comments"]},{"cell_type":"code","metadata":{"id":"Chy3pmP9r9Ch"},"source":["# Assiging 56 to score\n","score = 56"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Am56-sCnr6vi"},"source":["##### <font color=\"blue\">Example 2:</font> Multiple Line Comments - Method 1"]},{"cell_type":"code","metadata":{"id":"i4mALMPGr2Ad"},"source":["'''\n","This is a multiline comment. \n","We use the delimiter characters to indicate that \n","the following multi-line content are comments.\n","'''\n","score = 53"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5enr7YOCsGiO"},"source":["##### <font color=\"blue\">Example 3:</font> Multiple Line Comments - Method 2"]},{"cell_type":"code","metadata":{"id":"jLWLFxn5sVnD"},"source":["# ---\n","# This is a multi-line comment. \n","# We can also use multiple hash characters to comment on \n","# a block of content just as shown in this example.\n","# We will be using this method of commenting to \n","# provide more information about the exercises \n","# and challenges within this course.\n","# ---\n","#\n","score = 53"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"czwZIoMP8yq2"},"source":["#### <font color=\"green\">Challenges</font> "]},{"cell_type":"markdown","metadata":{"id":"UVhxQgFF8KI_"},"source":["##### <font color=\"green\">Challenge 1:</font> Explain the following code below using a single line comment."]},{"cell_type":"code","metadata":{"id":"EXZ0jzkw8N3Z"},"source":["#variable home_planet holds string Earth\n","home_planet = \"Earth\""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vRf4lpd38TE8"},"source":["##### <font color=\"green\">Challenge 2:</font> Explain the following code using multiple line comments (using delimiters)"]},{"cell_type":"code","metadata":{"id":"C4eWE7xS8U9m","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1624694175530,"user_tz":-180,"elapsed":404,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"08fdba2b-0153-49d2-e83d-d2903eba14ec"},"source":["'''\n","four hundred laps are represented by the  variable 'lap'\n","\n","'''\n","lap = 400\n","lap2 = 800\n","\n","lap3 = lap/lap2\n","lap3"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"qOcy-X35HV_t"},"source":["# 2. Arithmetic Operators"]},{"cell_type":"markdown","metadata":{"id":"GznVfEmDjC7A"},"source":["**Arithmetic operators** are mathematical functions that take two values and\n","perform a calculation on them."]},{"cell_type":"markdown","metadata":{"id":"HX5OKWTeH3y7"},"source":["#### <font color=\"blue\">Examples</font>"]},{"cell_type":"markdown","metadata":{"id":"V3vakOO6H9Vh"},"source":["##### <font color=\"blue\">Example 1"]},{"cell_type":"code","metadata":{"id":"LzONiSsfHAmy"},"source":["# Example 1\n","# ---\n","# We will now go through arithmetic operators. Here in this example, \n","# we will perform an addition operation below. We can use the subtraction operator\n","# to perform the subtraction operator\n","# ---\n","# \n","\n","# Declare our variables\n","a = 40\n","b = 10\n","\n","# Addition\n","c = a + b\n","\n","# Printing out our results\n","print(c)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RMTv6MI1IIT_"},"source":["##### <font color=\"blue\">Example 2"]},{"cell_type":"code","metadata":{"id":"JPCyGVKjICxP"},"source":["# Example 2\n","# ---\n","# We can perform an division operation below\n","# ---\n","# \n","d = a / b\n","\n","# Printing out our result\n","# ---\n","#\n","print(d)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HHygJvHMIPgh"},"source":["##### <font color=\"blue\">Example 3"]},{"cell_type":"code","metadata":{"id":"FFONu-_VIO1k"},"source":["# Example 3\n","# ---\n","# We can also use the increment operator to perform a = a + b. This is a common operator \n","# while writing python programs. In addition, we can also use the decrement operator -=.\n","# After you've ran this cell, you can try using decrement operator so that you see\n","# what happens when you use it.\n","# ---\n","# \n","\n","# Declaring our variables \n","# ---\n","# \n","a = 40\n","b = 10\n","\n","# Using the increment operator\n","# ---\n","#\n","a += b\n","\n","# Printing out our result\n","# ---\n","#\n","print(a)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"x_Sf1NXPpz0q"},"source":["##### <font color=\"blue\">Example 4</font>"]},{"cell_type":"code","metadata":{"id":"R7vSWLfvpxVl"},"source":["# Example 4\n","# ---\n","# We can also use the exponentiation operator ** to raise the number \n","# to its left to the power of the number to its right. For example, 3**2 = 9.\n","# Another operator we can use is the modulus operator % which returns \n","# the remainder of the division between number on the left by the on the right.\n","# For Example, 5 % 2 = 1\n","# ---\n","#\n","\n","# Uncomment the following lines of code and see what happens\n","# ---\n","# \n","print(15 % 7)\n","# print(5 ** 2)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"EqUWEUsNINyj"},"source":["#### <font color=\"green\">Challenges</font> "]},{"cell_type":"markdown","metadata":{"id":"ExGMoK-pIb8p"},"source":["##### <font color=\"green\">Challenge 1</font>"]},{"cell_type":"code","metadata":{"id":"DnfLaMI-IhDi"},"source":["# Challenge 1\n","# ---\n","# Question: Subtract b from a using the above declared variables and print out the result\n","# ---\n","# YOUR CODE GOES BELOW\n","#"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZfjZLNgMIeYh"},"source":["##### <font color=\"green\">Challenge 2</font>"]},{"cell_type":"code","metadata":{"id":"gUZE2lrcIhXi"},"source":["# Challenge 2\n","# ---\n","# Question: Multiply a and b variables and print out the result\n","# ---\n","# YOUR CODE GOES HERE\n","# "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dqhVm_8kN2tl"},"source":["# 3. Data Types"]},{"cell_type":"markdown","metadata":{"id":"bRA3zsr8jnus"},"source":["A **data type** is a classification that allows specifying which type of value\n","a variable contains. It defines the operations that can be done on the data and how the data can be stored.\n","\n","- **Integer** value is a positive or negative whole number i.e. -1 or 4.\n","- **String** value is a sequence of characters. Strings are contained in either single or double quotes i.e. \"Jane\" or 'Janet'.\n","- **Float** value is a real number with floating-point representation i.e. 10.5 or 55.69 \n"]},{"cell_type":"markdown","metadata":{"id":"VtTVm3cvN_lP"},"source":["#### <font color=\"blue\">Examples</font>"]},{"cell_type":"markdown","metadata":{"id":"qIxhQwTHOIjm"},"source":["##### <font color=\"blue\">Example 1"]},{"cell_type":"code","metadata":{"id":"n7APi3z1NtN0"},"source":["# Example 1\n","# ---\n","# Dynamically-inferred types\n","# ---\n","#\n","\n","# Integer data type\n","# ---\n","# Integer value is a positive or negative whole number.\n","# ---\n","#\n","x = 50\n","print(type(x))\n","\n","# String data type \n","# ---\n","# String value is a sequence of characters. Strings are contained in either single or double quotes.\n","# ---\n","#\n","x = '30'\n","print(type(x))\n","\n","# Float data type\n","# ---\n","# Float value is a real number with floating-point representation.\n","# ---\n","# \n","x = 90.0\n","print(type(x))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JdKpybEFOJOM"},"source":["##### <font color=\"blue\">Example 2"]},{"cell_type":"code","metadata":{"id":"2Al_wNeZOE7t"},"source":["# Example 2\n","# ---\n","# Manual type-conversion (string to int)\n","# Let's see what happens when we add a value of integer datatype with\n","# a value of string data type.\n","# ---\n","# \n","x = 40\n","y = '4'\n","\n","print(x + int(y))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"XJoETlR_OKHt"},"source":["##### <font color=\"blue\">Example 3"]},{"cell_type":"code","metadata":{"id":"CmPAy-efOEx-"},"source":["# Example 3\n","# ---\n","# Automatic type-conversion (int to float)\n","# ---\n","# \n","x = 20\n","print(type(x))\n","\n","x += 5.0\n","print(x)\n","\n","print(type(x))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8w3U0HVEOccy"},"source":["##### <font color=\"blue\">Example 4"]},{"cell_type":"code","metadata":{"id":"o_qQW55lOeY5"},"source":["# Example 4\n","# ---\n","# Dividing Integers results to a float\n","# ---\n","# \n","a = 40\n","b = 5\n","\n","print(a/b)\n","print(b/a)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hDZ9eDtmOgLi"},"source":["##### <font color=\"blue\">Example 5"]},{"cell_type":"code","metadata":{"id":"RqtHFRB1OkU-"},"source":["# Example 5\n","# ---\n","# Forcing float division\n","# ---\n","# \n","print(b/float('5'))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"SxIaU06sOuYQ"},"source":["##### <font color=\"blue\">Example 6"]},{"cell_type":"code","metadata":{"id":"Ho7QuNWqOvNs"},"source":["# Examaple 6\n","# ---\n","# String \"arithmetic\" (actually concatenation)\n","# Adding two strings\n","# ---\n","a = 'John '\n","b = 'Doe'\n","\n","print(a + b)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GuR57OHgOBnM"},"source":["#### <font color=\"green\">Challenges</font> "]},{"cell_type":"markdown","metadata":{"id":"eaq4UrFLONmb"},"source":["##### <font color=\"green\">Challenge 1</font>"]},{"cell_type":"code","metadata":{"id":"sXCvJSB1OD8w"},"source":["# Challenge 1\n","# ---\n","# Question: Print out any variable that comes to mind with the string data type.\n","# ---\n","# YOUR CODE GOES BELOW\n","#"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"bSurXHq_OOjc"},"source":["##### <font color=\"green\">Challenge 2</font>"]},{"cell_type":"code","metadata":{"id":"fQjDSfP1OEPH"},"source":["# Challenge 2\n","# ---\n","# Question: Run and correct the following code.\n","# ---\n","# Hint: Read the errors generated and modify the code accordingly\n","# "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hnyRRASVOPq4"},"source":["##### <font color=\"green\">Challenge 3</font>"]},{"cell_type":"code","metadata":{"id":"7qUmDv5NOFl0"},"source":["# Challenge 3\n","# ---\n","# Question: Perform integer division of 199 and 3 with the result being a float.\n","# Print out the result.\n","# ---\n","# YOUR CODE GOES BELOW\n","#"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"okwTjEZ_PCiN"},"source":["##### <font color=\"green\">Challenge 4</font>"]},{"cell_type":"code","metadata":{"id":"YThUHgEzPEfP"},"source":["# Challenge 4\n","# ---\n","# Question: Print out the data type of the given variable x.\n","# ---\n","# YOUR CODE GOES BELOW\n","#"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"80kHsk0gQiX5"},"source":["# 4. Lists"]},{"cell_type":"markdown","metadata":{"id":"5enNElPNkEqk"},"source":["A **list** is a compound data type that allows for the storage of items of different data types. We use lists to store a set of related data."]},{"cell_type":"markdown","metadata":{"id":"r6CjXb92QsKs"},"source":["#### <font color=\"blue\">Examples</font>"]},{"cell_type":"markdown","metadata":{"id":"_We_Aif3Q_n5"},"source":["##### <font color=\"blue\">Example 1"]},{"cell_type":"code","metadata":{"id":"2JcpAVbvQd1w"},"source":["# Example 1\n","# ---\n","# Question: Create a list named fish and store it with values of different types of fish\n","# ---\n","# \n","\n","# Defining our list\n","fish = [\"salmon\", \"star fish\", \"tilapia\", \"sword fish\"]\n","\n","# Printing our result\n","fish"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sVrIv1ucRAtY"},"source":["##### <font color=\"blue\">Example 2"]},{"cell_type":"code","metadata":{"id":"aI4qEeumRCRr"},"source":["# Example 2\n","# ---\n","# Question: Add elements to a list\n","# ---\n","# \n","\n","# Adding the fish \"gold fish\" to our fish list\n","# ---\n","#\n","fish.append(\"gold fish\")\n","\n","# Printing our result\n","# ---\n","#\n","print(fish)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xaLN8jeYRDll"},"source":["##### <font color=\"blue\">Example 3"]},{"cell_type":"code","metadata":{"id":"eqHEZSfYRE_X"},"source":["# Example 3 \n","# ---\n","# Question: updating an element in a list\n","# ---\n","#\n","fish[2] = \"nile tipalia\"\n","\n","# Printing our result\n","# ---\n","#\n","print(fish)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dGKEWiBwTVFM"},"source":["##### <font color=\"blue\">Example 4"]},{"cell_type":"code","metadata":{"id":"JTi3KkzITYk8"},"source":["# Example 4 \n","# ---\n","# Question: Remove an element from a list\n","# ---\n","#\n","fish.remove(\"gold fish\")\n","\n","# Printing our result\n","# ---\n","#\n","print(fish)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WnXWTn9WTaJs"},"source":["##### <font color=\"blue\">Example 5"]},{"cell_type":"code","metadata":{"id":"3o416dxITbNq"},"source":["# Example 5\n","# ---\n","# Question: Slice the restaurant list to fetch specific elements in a list\n","# ---\n","#\n","\n","# Getting the first element in the list as shown\n","# ---\n","# \n","print(fish[0])\n","\n","# Getting the first two elements in the list as shown\n","# ---\n","#\n","print(fish[0:2])\n","\n","# Getting the last one element in the list as shown\n","# ---\n","#\n","print(fish[-1:])\n","\n","# Getting items from 2nd position to the end in the list as shown\n","# ---\n","#\n","print(fish[2:])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"96-FMInjQs5S"},"source":["#### <font color=\"green\">Challenges</font> "]},{"cell_type":"markdown","metadata":{"id":"z9M2LwKAQvN_"},"source":["##### <font color=\"green\">Challenge 1</font>"]},{"cell_type":"code","metadata":{"id":"gkiZKIQfQuzt"},"source":["# Challenge 1\n","# ---\n","# Question: Create a list containing any 5 fruits of your choice. \n","# ---\n","# YOUR CODE GOES BELOW\n","# "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fnRxw0qjQ1aZ"},"source":["##### <font color=\"green\">Challenge 2</font>"]},{"cell_type":"code","metadata":{"id":"dCUhw0npQ4lD"},"source":["# Challenge 2\n","# ---\n","# Question: Add the fruit guava to your list.\n","# ---\n","# YOUR CODE GOES BELOW\n","# "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HA99lKmhQ68W"},"source":["##### <font color=\"green\">Challenge 3</font>"]},{"cell_type":"code","metadata":{"id":"Ci5HL0QDQ8o-"},"source":["# Challenge 3\n","# ---\n","# Question: Update the fruit in the third and fourth position in the list \n","# with \"red orange\", \"yellow orange\"\n","# ---\n","# YOUR CODE GOES BELOW\n","# "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"z7mA-mghTmOc"},"source":["##### <font color=\"green\">Challenge 4</font>"]},{"cell_type":"code","metadata":{"id":"d8oGQBGUTr3i"},"source":["# Challenge 4\n","# ---\n","# Question: Print out the last two fruits in your list.\n","# ---\n","# YOUR CODE GOES BELOW\n","# "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qcpLR3a_XPLd"},"source":["# 5. Conditional (If) Statements"]},{"cell_type":"markdown","metadata":{"id":"zw4tIKRGkNci"},"source":["**Conditional if** statements are used for decision making. They will run code if only when if the statement is true. In general, we use conditional (if) statements to execute a certain part of code if a condition is satisfied."]},{"cell_type":"markdown","metadata":{"id":"EnaCUxpRXT0J"},"source":["#### <font color=\"blue\">Examples</font>"]},{"cell_type":"markdown","metadata":{"id":"ZX5LhYDuXV2O"},"source":["##### <font color=\"blue\">Example 1"]},{"cell_type":"code","metadata":{"id":"f9y3Gs_0XF9d"},"source":["# Example 1\n","# ---\n","# Question: How do we use the If keyword?\n","# ---\n","# \n","\n","# We first declare our variables\n","p = 500\n","q = 100\n","\n","# Then we use the if keyword as shown. (We need to watchout for the white spaces)\n","if q < p:\n","  print(\"q is less than p\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7vliBrC5Xk65"},"source":["##### <font color=\"blue\">Example 2"]},{"cell_type":"code","metadata":{"id":"HChmx56TXl3j"},"source":["# Example 2\n","# ---\n","# Question: How can we use the Elif keyword?\n","# ---\n","# \n","r = 100\n","s = 100\n","\n","p = 500\n","q = 100\n","\n","if s < r:\n","  if q < p:\n","    print(\"y is less than x\")\n","elif r == s:\n","  print(\"r and s are equal\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0xG8q15EXnW_"},"source":["##### <font color=\"blue\">Example 3"]},{"cell_type":"code","metadata":{"id":"jxac2rfpXpws"},"source":["# Example 3 \n","# ---\n","# Question: How can we use the Else keyword?\n","# ---\n","# \n","\n","# Declaring our variables\n","a = 150\n","b = 50\n","\n","# Then using our else keyword\n","if b > a:\n","  print(\"b is greater than a\")\n","elif a == b:\n","  print(\"a and b are equal\")\n","else:\n","  print(\"a is greater than b\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"2gYk4uIZYFKf"},"source":["##### <font color=\"blue\">Example 4"]},{"cell_type":"code","metadata":{"id":"cswVDkN0YGQV"},"source":["# Example 4\n","# ---\n","# Question: How can we use the And keyword?\n","# ---\n","# \n","\n","# Declaring our variables\n","name = \"Mary\"    \n","age  = 30 \n","\n","# Using the And keyword\n","if name == \"Mary\" and age == 30:\n","  print(\"My name is Mary, and I am 30 years old.\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7vPUGzblYGj1"},"source":["##### <font color=\"blue\">Example 5"]},{"cell_type":"code","metadata":{"id":"ivMrjohRYHe6"},"source":["# Example 5\n","# ---\n","# How can we use the Or keyword?\n","# ---\n","# \n","a = 100\n","b = 101\n","c = 99\n","\n","if a > b or a > c:\n","  print(\"At least one of the conditions is True\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IhBdAGNeXa9N"},"source":["#### <font color=\"green\">Challenges</font> "]},{"cell_type":"markdown","metadata":{"id":"kBHUUpINXev4"},"source":["##### <font color=\"green\">Challenge 1</font>"]},{"cell_type":"code","metadata":{"id":"fae-fxEZXfix"},"source":["# Challenge 1\n","# ---\n","# Question: Declare two variables t and s then, find out whether t is less than s.\n","# You can use the values of t and s to be 7 and 8 respectively.\n","# ---\n","# YOUR CODE GOES BELOW\n","# "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"c10_umZGgZFg"},"source":["##### <font color=\"green\">Challenge 2</font>"]},{"cell_type":"code","metadata":{"id":"fATxaR0QgXfd"},"source":["# Challenge 2\n","# ---\n","# Question: Create an if statement that determines whether a number given \n","# by a user is greater than 10 and less than 30. \n","# The number given can be in the form of a variable.\n","# ---\n","# Hint: Use the and keyword\n","# ---\n","# YOUR CODE GOES BELOW\n","#  "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hdEWP1SNnFHp"},"source":["# 6. Dictionaries"]},{"cell_type":"markdown","metadata":{"id":"KrWzTK43kc4r"},"source":["A **dictionary** is a data type that is used to store key-value pairs. It\n","enables us to retrieve, add, remove, modify values using keys. Use case: When training a machine learning model we can store features and labels in dictionaries."]},{"cell_type":"markdown","metadata":{"id":"_TGroESwnRos"},"source":["#### <font color=\"blue\">Examples</font>"]},{"cell_type":"markdown","metadata":{"id":"TbJ6OFKqnUTy"},"source":["##### <font color=\"blue\">Example 1"]},{"cell_type":"code","metadata":{"id":"sIEWsndxnBIx"},"source":["# Example 1\n","# ---\n","# Question: Create a dictionary named vehicle and store 3 keys with their respective values \n","# ---\n","# \n","vehicle =\t{\n","  'brand': 'Toyota',\n","  'model': 'Subaru',\n","  'year': 2019\n","}\n","print(vehicle)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HxuW_VVCnVgw"},"source":["##### <font color=\"blue\">Example 2"]},{"cell_type":"code","metadata":{"id":"1Vmghb0onWoR"},"source":["# Example 2\n","# ---\n","# Question: Add an element to the vehicle dictionary \n","# ---\n","# \n","\n","# Adding an element to your dictionary\n","vehicle['engine'] = '1800cc'  \n","\n","# Printing out our updated dictionary\n","print(vehicle)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8LarnuTTnalz"},"source":["##### <font color=\"blue\">Example 3"]},{"cell_type":"code","metadata":{"id":"iAQKOoTJnd-D"},"source":["# Example 3\n","# ---\n","# Question: Update an element in the vehicle dictionary\n","# ---\n","# \n","\n","# Updating an element to our dictionary\n","vehicle['engine'] = '2400cc'\n","\n","# Printing out our updated dictionary\n","print(vehicle)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VSxz3OK9nb4P"},"source":["##### <font color=\"blue\">Example 4"]},{"cell_type":"code","metadata":{"id":"9JidwoWunedW"},"source":["# Example 4\n","# ---\n","# Question: Access an element from a dictionary\n","# ---\n","# \n","\n","# Printing our vehicle's model\n","#\n","print(vehicle[\"model\"]) \n","\n","# or we could use\n","print(vehicle.get(\"model\"))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_xf8ei3mnc3-"},"source":["##### <font color=\"blue\">Example 5"]},{"cell_type":"code","metadata":{"id":"kBMhLSUvnfXb"},"source":["# Example 5\n","# ---\n","# Question: Remove an element from the vehicle dictionary\n","# ---\n","# \n","\n","# Removing model from the dictionary\n","vehicle_without_model = vehicle.pop(\"model\")\n","vehicle"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"C4tY9xM-n6jP"},"source":["##### <font color=\"blue\">Example 6"]},{"cell_type":"code","metadata":{"id":"l10tZKkqn791"},"source":["# Example 6\n","# ---\n","# Question: Check if an element exists in the vehicle dictionary\n","# ---\n","# \n","\n","if \"brand\" in vehicle:\n","  print(\"Yes, the keyword exists in the dictionary\")\n","else:\n","  print('No, the keyword does not exist in the dictionary')\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qxG8RHFnniJT"},"source":["#### <font color=\"green\">Challenges</font> "]},{"cell_type":"markdown","metadata":{"id":"dQlkT13Gnjid"},"source":["##### <font color=\"green\">Challenge 1</font>"]},{"cell_type":"code","metadata":{"id":"omUwx9wnnlcl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1624693673635,"user_tz":-180,"elapsed":731,"user":{"displayName":"Kuria K. Ken","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnEdqxk2Mp_jIE4QawUovTRuGsreOMU5LcwWtLIw=s64","userId":"18249265223060828810"}},"outputId":"951ba305-cbbb-4b58-8244-08bc33b99d89"},"source":["# Challenge 1\n","# ---\n","# Question: Create a dictionary named accountants then populate it with \n","# any values for the keys; name, certification, company\n","# ---\n","# YOUR CODE GOES BELOW\n","#\n","\n","name = [\"name\", \"certification\", \"company\"]\n","\n","name"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['name', 'certification', 'company']"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"6Pdl8p-QnmN1"},"source":["##### <font color=\"green\">Challenge 2</font>"]},{"cell_type":"code","metadata":{"id":"szya8o5cnnDr"},"source":["# Challenge 2\n","# ---\n","# Question: Add the element institution with value 'Pearson' to the \n","# accountants dictionary \n","# ---\n","# YOUR CODE GOES BELOW\n","#  "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"93yfMyQWnovw"},"source":["##### <font color=\"green\">Challenge 3</font>"]},{"cell_type":"code","metadata":{"id":"nRK7lwI-npy6"},"source":["# Challenge 3\n","# ---\n","# Question: Update the element name with value Jane in the accountants dictionary \n","# ---\n","# YOUR CODE GOES BELOW\n","#  "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6T7Z10zUnquf"},"source":["##### <font color=\"green\">Challenge 4</font>"]},{"cell_type":"code","metadata":{"id":"QijrUFV6nruq"},"source":["# Challenge 4\n","# ---\n","# Question: Access the value of the certification key in the dictionary above\n","# ---\n","# YOUR CODE GOES BELOW\n","#  "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"l4aSf1SQnsIc"},"source":["##### <font color=\"green\">Challenge 5</font>"]},{"cell_type":"code","metadata":{"id":"HE2tBOlpntTl"},"source":["# Challenge 5\n","# ---\n","# Question: Check whether country is a key in the accountants dictionary \n","# ---\n","# YOUR CODE GOES BELOW\n","#  "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wW6zZPzHpPkw"},"source":["# 7. For Loops"]},{"cell_type":"markdown","metadata":{"id":"IECi4wbVkjWe"},"source":["A **for loop** is a control flow statement that allows code to be executed repeatedly. The are used to iterate over a sequence i.e. list, dictionary, string,\n","etc. They can also be used to repeat a specific block of code a known number of times."]},{"cell_type":"markdown","metadata":{"id":"Tj7-43EzpXKP"},"source":["#### <font color=\"blue\">Examples</font>"]},{"cell_type":"markdown","metadata":{"id":"9CbPFikcpb65"},"source":["##### <font color=\"blue\">Example 1"]},{"cell_type":"code","metadata":{"id":"A6ghbClnpKgH"},"source":["# Example 1\n","# ---\n","# Question: Loop/iterate through the string \"Karura Karura\"\n","# ---\n","# \n","a = \"Karuna Karuna\"\n","for y in a:\n","  print(y)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8TToTfDxpcsC"},"source":["##### <font color=\"blue\">Example 2"]},{"cell_type":"code","metadata":{"id":"KQjf-iXjpdoW"},"source":["# Example 2\n","# ---\n","# Question: Use a break statement to stop the loop before it continues its iteration\n","# ---\n","# \n","\n","# Let's print out the restaurants list that we had created earlier on\n","restaurants = [\"cj's\", \"Java\", \"Nyama Mama\", \"Italian\", \"Viridian\", \"Khosa\"]\n","\n","# Looping and using a break statement\n","for x in restaurants:\n","  print(x) \n","  if x == \"Viridian\":\n","    break"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"O0n2jmlupeUe"},"source":["##### <font color=\"blue\">Example 3"]},{"cell_type":"code","metadata":{"id":"cwraj51ZpfqH"},"source":["# Example 3\n","# ---\n","# Question: Use a continue statement to stop the current iteration of the loop \n","# and continue the next section of our code\n","# ---\n","# \n","\n","# Creating a list\n","mobile_phone = [\"iphone 4\", \"iphone 5\", \"iphone 6\", \"iphone 7\", \"iphone 8\", \"iphone x\", \"iphone xs\"]\n","\n","# Using a for loop\n","for x in mobile_phone:  \n","    if x == 'iphone 6' or x == 'iphone 8': \n","         continue\n","    print('Checked Phone :', x) "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uBJfTBcDpooj"},"source":["#### <font color=\"green\">Challenges</font> "]},{"cell_type":"markdown","metadata":{"id":"xVpVBXPkprnS"},"source":["##### <font color=\"green\">Challenge 1</font>"]},{"cell_type":"code","metadata":{"id":"HFGk4EqIppVV"},"source":["# Challenge 1\n","# ---\n","# Question: Iterate through the string \"I am a citizen of the World\"\n","# ---\n","# YOUR CODE GOES BELOW\n","# "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"05xi5W5kpsYM"},"source":["##### <font color=\"green\">Challenge 2</font>"]},{"cell_type":"code","metadata":{"id":"E3VR4EOWptKc"},"source":["# Challenge 2\n","# Make changes to the code below to omit the Yohana and Mariga\n","# while displaying the items in the footballers list.\n","#\n","\n","# Creating our list\n","# ---\n","# \n","footballers = [\"Oliech\", \"Kahata\", \"Yohana\", \"Matasi\", \"Mariga\", \"Wanyama\"]\n","\n","# Iterating over our list\n","# ---\n","#  \n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"lY-G45bwqiq8"},"source":["# 8. While Loops"]},{"cell_type":"markdown","metadata":{"id":"OoD5XCCPmMub"},"source":["A **while loop** executes a set of statements as long as a condition is\n","true."]},{"cell_type":"markdown","metadata":{"id":"pZnqvIFlqrcF"},"source":["#### <font color=\"blue\">Examples</font>"]},{"cell_type":"markdown","metadata":{"id":"iO82jGS5qwik"},"source":["##### <font color=\"blue\">Example 1"]},{"cell_type":"code","metadata":{"id":"Miw-1LdYqfoZ"},"source":["# Example 1\n","# ---\n","# Question: Iterate over a list using the while loop\n","# ---\n","# YOUR CODE GOES BELOW\n","#\n","\n","# First defining our list\n","teachers = ['John', 'Ruth', 'Naomi', 'Esther', 'Liz', 'Stephen', 'Lona', 'Susan', 'Ian']\n","\n","# Our while loop will start counting from 0,\n","i = 0\n","\n","# determining the no. of elements in our teachers list\n","no_of_teachers = len(teachers) \n","\n","# Performing our iteration, starting from 0 until i is not less than the no_of_teachers\n","while i < no_of_teachers:\n","  \n","  # print out the element in the list as per the index\n","  print(teachers[i])\n","  \n","  # incrementing our i by 1\n","  i += 1"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"iU4HK7hrqiMO"},"source":["##### <font color=\"blue\">Example 2"]},{"cell_type":"code","metadata":{"id":"OMGyf-1hqyQS"},"source":["# Example 2\n","# ---\n","# Question: Use a break statement while iterating over our teachers list\n","# ---\n","# YOUR CODE GOES BELOW\n","#\n","\n","# Our while loop will start counting from 0,\n","i = 0\n","\n","# determining the no. of elements in our teachers list\n","no_of_teachers = len(teachers) \n","\n","# defining our word variable\n","word = \"Emma\"\n","\n","\n","# Performing our iteration, starting from 0 until i is not less than the no_of_teachers\n","while i < no_of_teachers:\n","  \n","  # print out the element in the list as per the index\n","  if word == teachers[i]:\n","    \n","      print(\"Find the element at position:\",i)\n","    \n","      break\n","  \n","  # incrementing our i by 1\n","  i += 1"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UoUvopuiqz1A"},"source":["##### <font color=\"blue\">Example 3"]},{"cell_type":"code","metadata":{"id":"OpzRASVXq07R"},"source":["# Example 3\n","# ---\n","# Using the continue statement forces the next iteration of the loop to take place \n","# ---\n","# YOUR CODE GOES BELOW\n","#\n","\n","# Our while loop will start counting from 0,\n","i = 0\n","\n","# determining the no. of elements in our teachers list\n","no_of_teachers = len(teachers) \n","\n","# defining our word variable\n","word = \"Emma\"\n","\n","\n","# Performing our iteration, starting from 0 until i is not less than the no_of_teachers\n","while i < no_of_teachers:\n","  \n","    print(\"Checking element:\", i)\n","    \n","    if word != teachers[i]:\n","        \n","        i = i + 1\n","        \n","        continue\n"," \n","    print(\"Find the element at \", i)\n","    \n","    # stop the loop\n","    i = no_of_teachers "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_BlOlAaNq4Aj"},"source":["#### <font color=\"green\">Challenges</font> "]},{"cell_type":"markdown","metadata":{"id":"yDuSe7aAq56q"},"source":["##### <font color=\"green\">Challenge 1</font>"]},{"cell_type":"code","metadata":{"id":"lDRkMkFIq7n5"},"source":["# Challenge 1\n","# ---\n","# Question: Iterate through the following list and stop at 8\n","# ---\n","# YOUR CODE GOES BELOW\n","#\n","\n","a = [1, 2, 4, 12, 1, 2, 3, (5, 6), ['Hello', 'From', 'The'], 8, 'Other', 'Side']\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rYrnAuYBryYC"},"source":["# 9. Functions "]},{"cell_type":"markdown","metadata":{"id":"Y9MWH15wkq7e"},"source":["A **function** is a block of organized, reusable code. We use functions to bundle a set of instructions that you want to use repeatedly."]},{"cell_type":"markdown","metadata":{"id":"WOi0gv2Dr83t"},"source":["#### <font color=\"blue\">Examples</font>"]},{"cell_type":"markdown","metadata":{"id":"GgSYzCUYsCWG"},"source":["##### <font color=\"blue\">Example 1"]},{"cell_type":"code","metadata":{"id":"0zJ1kn1BrwkV"},"source":["# Example 1\n","# ---\n","# Let's use built-in functions\n","# ---\n","# YOUR CODE GOES BELOW\n","#\n","\n","# The max() function will return the item with the highest value as shown\n","# in the given list\n","a = [23, 22, 55, 23, 44]\n","x = max(a)\n","print(x)\n","\n","# Using the max() function, we can return the item with the highest value alphabetically\n","y = max([\"Susan\", \"Grace\", \"Simon\"])\n","print(y)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-bAG0iH2sDiV"},"source":["##### <font color=\"blue\">Example 2"]},{"cell_type":"code","metadata":{"id":"0YQ7eSTvsEZP"},"source":["# Example 2\n","# ---\n","# Let's create a function to find out which of two numbers is greater than the other \n","# ---\n","# YOUR CODE GOES BELOW\n","#\n","\n","# we define it by giving it the name max_of_two\n","def max_of_two():\n","  \n","  # we then define our variables that will contain the numbers to be manipulated\n","  first_number  = 10\n","  second_number = 5\n","  \n","  # then we perform our operations i.e. in this case,\n","  # if first_number is greater than second_number etc.\n","  if first_number > second_number:\n","    \n","      # the return keyword allows us to provide back the result/output of our function\n","    return first_number\n","  \n","    # the return key word allows us to provide back the result/output of our function\n","  return second_number\n"," \n","# Lastly, we do the most important step; which is to call the function that \n","# we have just created above. Calling allows us to use the function. \n","# We have also been calling our built-in functions from the previous section.\n","#\n","max_of_two()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"47gh_27esFHZ"},"source":["##### <font color=\"blue\">Example 3"]},{"cell_type":"code","metadata":{"id":"a8odALGjsGJy"},"source":["# Example 3\n","# ---\n","# Define a function called average_of_two_numbers below  \n","# ---\n","# YOUR CODE GOES BELOW\n","#\n","\n","def average_of_two_numbers(x, y): \n","  average_of_two_numbers = (x + y)/2 \n","  return print(average_of_two_numbers)  \n","  \n","average_of_two_numbers(4, 5) "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"m1FOyDx-r_C_"},"source":["#### <font color=\"green\">Challenges</font> "]},{"cell_type":"markdown","metadata":{"id":"PgsptduxsKGg"},"source":["##### <font color=\"green\">Challenge 1</font>"]},{"cell_type":"code","metadata":{"id":"t4PE4y_Vr_1Q"},"source":["# Challenge 1\n","# ---\n","# Question: Determine the lowest value in the given array using an inbuilt function\n","# ---\n","# YOUR CODE GOES BELOW\n","#\n","\n","# Create a list x\n","# ---\n","#\n","x = [23, 22, 55, 23, 44]\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"88bM7tZ2sLI4"},"source":["##### <font color=\"green\">Challenge 2</font>"]},{"cell_type":"code","metadata":{"id":"W7aQKJ96sL_F"},"source":["# Challenge \n","# ---\n","# Question: Write a function to tell us whether a variable covid_count is between 3000 and 10000\n","# ---\n","# YOUR CODE GOES BELOW\n","#\n","\n","# Declaring our variable covid_count\n","# ---\n","# \n","covid_count = 4500\n","\n","# Your function goes here"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TM4pA_3kJ2YE"},"source":["<font color=\"blue\">To use this notebook on Colaboratory, you will need to make a copy of it. Go to File > Save a Copy in Drive. You can then use the new copy that will appear in the new tab.</font>\n"]}]}